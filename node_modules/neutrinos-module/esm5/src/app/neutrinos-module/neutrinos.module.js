import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { FormsModule } from '@angular/forms';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { FlexLayoutModule } from '@angular/flex-layout';
import { NeutrinosSeedServicesModule } from 'neutrinos-seed-services';
import { MatIconModule } from '@angular/material/icon';
import { MatDialogModule } from '@angular/material/dialog';
import { MatButtonModule } from '@angular/material/button';
import { MatButtonToggleModule } from '@angular/material/button-toggle';
import { NCameraDirective } from './neutrinos-file/directives/n-camera.directive';
import { NDownloadDirective } from './neutrinos-file/directives/n-download.directive';
import { NScanDirective } from './neutrinos-file/directives/n-scanner.directive';
import { NVideoDirective } from './neutrinos-file/directives/n-video.directive';
import { NBarcodeDirective } from './neutrinos-file/directives/n-barcode.directive';
import { NTtsDirective } from './neutrinos-file/directives/n-tts.directive';
import { NFingerprintDirective } from './neutrinos-file/directives/n-fingerprint.directive';
import { NOcrDirective } from './neutrinos-file/directives/n-ocr.directive';
import { NShakeDirective } from './neutrinos-file/directives/n-shake.directive';
import { NFileUploadComponent } from './neutrinos-file/fileUpload/n-fileUpload.component';
import { NFileIOService } from './neutrinos-file/services/n-fileIO.service';
import { NAlertService } from './neutrinos-components/nAlertComponent/n-alert.service';
import { NAlertComponent } from './neutrinos-components/nAlertComponent/n-alert.component';
import { NToggleoptionsComponent } from './neutrinos-components/nToggleoptionsComponent/n-toggleoptions.component';
import { NSignatureComponent } from './neutrinos-components/nSignatureComponent/n-signature.component';
var EXPORTS = [
    NCameraDirective,
    NDownloadDirective,
    NScanDirective,
    NVideoDirective,
    NBarcodeDirective,
    NTtsDirective,
    NFingerprintDirective,
    NOcrDirective,
    NShakeDirective,
    NFileUploadComponent,
    NAlertComponent,
    NToggleoptionsComponent,
    NSignatureComponent,
];
var NeutrinosModule = /** @class */ (function () {
    function NeutrinosModule() {
    }
    NeutrinosModule = __decorate([
        NgModule({
            imports: [
                HttpClientModule,
                FormsModule,
                CommonModule,
                MatIconModule,
                MatDialogModule,
                MatButtonModule,
                BrowserAnimationsModule,
                MatButtonToggleModule,
                NeutrinosSeedServicesModule,
                FlexLayoutModule,
            ],
            declarations: [
                EXPORTS,
            ],
            exports: [
                EXPORTS,
                NFileUploadComponent,
                NeutrinosSeedServicesModule,
            ],
            providers: [
                NFileIOService,
                NAlertService
            ]
        })
    ], NeutrinosModule);
    return NeutrinosModule;
}());
export { NeutrinosModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV1dHJpbm9zLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ldXRyaW5vcy1tb2R1bGUvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1tb2R1bGUvbmV1dHJpbm9zLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUd6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzNELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUNqRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDcEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQzVGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUM1RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDaEYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDMUYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUV2RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDM0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMEVBQTBFLENBQUM7QUFDbkgsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sa0VBQWtFLENBQUM7QUFHdkcsSUFBTSxPQUFPLEdBQWdCO0lBQzNCLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixhQUFhO0lBQ2IsZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtDQUNwQixDQUFDO0FBNEJGO0lBQUE7SUFHQSxDQUFDO0lBSFksZUFBZTtRQTFCM0IsUUFBUSxDQUFDO1lBQ1IsT0FBTyxFQUFFO2dCQUNQLGdCQUFnQjtnQkFDaEIsV0FBVztnQkFDWCxZQUFZO2dCQUNaLGFBQWE7Z0JBQ2IsZUFBZTtnQkFDZixlQUFlO2dCQUNmLHVCQUF1QjtnQkFDdkIscUJBQXFCO2dCQUNyQiwyQkFBMkI7Z0JBQzNCLGdCQUFnQjthQUNqQjtZQUNELFlBQVksRUFBRTtnQkFDWixPQUFPO2FBQ1I7WUFDRCxPQUFPLEVBQUU7Z0JBQ1AsT0FBTztnQkFDUCxvQkFBb0I7Z0JBQ3BCLDJCQUEyQjthQUM1QjtZQUNELFNBQVMsRUFBRTtnQkFDVCxjQUFjO2dCQUNkLGFBQWE7YUFDZDtTQUNGLENBQUM7T0FDVyxlQUFlLENBRzNCO0lBQUQsc0JBQUM7Q0FBQSxBQUhELElBR0M7U0FIWSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuXHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBCcm93c2VyQW5pbWF0aW9uc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9ucyc7XHJcbmltcG9ydCB7IEZsZXhMYXlvdXRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XHJcbmltcG9ydCB7IE5ldXRyaW5vc1NlZWRTZXJ2aWNlc01vZHVsZSB9IGZyb20gJ25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzJztcclxuaW1wb3J0IHsgTWF0SWNvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2ljb24nO1xyXG5pbXBvcnQgeyBNYXREaWFsb2dNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xyXG5pbXBvcnQgeyBNYXRCdXR0b25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xyXG5pbXBvcnQgeyBNYXRCdXR0b25Ub2dnbGVNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24tdG9nZ2xlJztcclxuaW1wb3J0IHsgTkNhbWVyYURpcmVjdGl2ZSB9IGZyb20gJy4vbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLWNhbWVyYS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBORG93bmxvYWREaXJlY3RpdmUgfSBmcm9tICcuL25ldXRyaW5vcy1maWxlL2RpcmVjdGl2ZXMvbi1kb3dubG9hZC5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBOU2NhbkRpcmVjdGl2ZSB9IGZyb20gJy4vbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLXNjYW5uZXIuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTlZpZGVvRGlyZWN0aXZlIH0gZnJvbSAnLi9uZXV0cmlub3MtZmlsZS9kaXJlY3RpdmVzL24tdmlkZW8uZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTkJhcmNvZGVEaXJlY3RpdmUgfSBmcm9tICcuL25ldXRyaW5vcy1maWxlL2RpcmVjdGl2ZXMvbi1iYXJjb2RlLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IE5UdHNEaXJlY3RpdmUgfSBmcm9tICcuL25ldXRyaW5vcy1maWxlL2RpcmVjdGl2ZXMvbi10dHMuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTkZpbmdlcnByaW50RGlyZWN0aXZlIH0gZnJvbSAnLi9uZXV0cmlub3MtZmlsZS9kaXJlY3RpdmVzL24tZmluZ2VycHJpbnQuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTk9jckRpcmVjdGl2ZSB9IGZyb20gJy4vbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLW9jci5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBOU2hha2VEaXJlY3RpdmUgfSBmcm9tICcuL25ldXRyaW5vcy1maWxlL2RpcmVjdGl2ZXMvbi1zaGFrZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBORmlsZVVwbG9hZENvbXBvbmVudCB9IGZyb20gJy4vbmV1dHJpbm9zLWZpbGUvZmlsZVVwbG9hZC9uLWZpbGVVcGxvYWQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTkZpbGVJT1NlcnZpY2UgfSBmcm9tICcuL25ldXRyaW5vcy1maWxlL3NlcnZpY2VzL24tZmlsZUlPLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBOQWxlcnRTZXJ2aWNlIH0gZnJvbSAnLi9uZXV0cmlub3MtY29tcG9uZW50cy9uQWxlcnRDb21wb25lbnQvbi1hbGVydC5zZXJ2aWNlJztcclxuXHJcbmltcG9ydCB7IE5BbGVydENvbXBvbmVudCB9IGZyb20gJy4vbmV1dHJpbm9zLWNvbXBvbmVudHMvbkFsZXJ0Q29tcG9uZW50L24tYWxlcnQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTlRvZ2dsZW9wdGlvbnNDb21wb25lbnQgfSBmcm9tICcuL25ldXRyaW5vcy1jb21wb25lbnRzL25Ub2dnbGVvcHRpb25zQ29tcG9uZW50L24tdG9nZ2xlb3B0aW9ucy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOU2lnbmF0dXJlQ29tcG9uZW50IH0gZnJvbSAnLi9uZXV0cmlub3MtY29tcG9uZW50cy9uU2lnbmF0dXJlQ29tcG9uZW50L24tc2lnbmF0dXJlLmNvbXBvbmVudCc7XHJcblxyXG5cclxuY29uc3QgRVhQT1JUUzogVHlwZTxhbnk+W10gPSBbXHJcbiAgTkNhbWVyYURpcmVjdGl2ZSxcclxuICBORG93bmxvYWREaXJlY3RpdmUsXHJcbiAgTlNjYW5EaXJlY3RpdmUsXHJcbiAgTlZpZGVvRGlyZWN0aXZlLFxyXG4gIE5CYXJjb2RlRGlyZWN0aXZlLFxyXG4gIE5UdHNEaXJlY3RpdmUsXHJcbiAgTkZpbmdlcnByaW50RGlyZWN0aXZlLFxyXG4gIE5PY3JEaXJlY3RpdmUsXHJcbiAgTlNoYWtlRGlyZWN0aXZlLFxyXG4gIE5GaWxlVXBsb2FkQ29tcG9uZW50LFxyXG4gIE5BbGVydENvbXBvbmVudCxcclxuICBOVG9nZ2xlb3B0aW9uc0NvbXBvbmVudCxcclxuICBOU2lnbmF0dXJlQ29tcG9uZW50LFxyXG5dO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBIdHRwQ2xpZW50TW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBNYXRJY29uTW9kdWxlLFxyXG4gICAgTWF0RGlhbG9nTW9kdWxlLFxyXG4gICAgTWF0QnV0dG9uTW9kdWxlLFxyXG4gICAgQnJvd3NlckFuaW1hdGlvbnNNb2R1bGUsXHJcbiAgICBNYXRCdXR0b25Ub2dnbGVNb2R1bGUsXHJcbiAgICBOZXV0cmlub3NTZWVkU2VydmljZXNNb2R1bGUsXHJcbiAgICBGbGV4TGF5b3V0TW9kdWxlLFxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBFWFBPUlRTLFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgRVhQT1JUUyxcclxuICAgIE5GaWxlVXBsb2FkQ29tcG9uZW50LFxyXG4gICAgTmV1dHJpbm9zU2VlZFNlcnZpY2VzTW9kdWxlLFxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICBORmlsZUlPU2VydmljZSxcclxuICAgIE5BbGVydFNlcnZpY2VcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZXV0cmlub3NNb2R1bGUge1xyXG5cclxuXHJcbn1cclxuIl19