import { __decorate } from "tslib";
import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { HostListener } from '@angular/core';
import { NFileIOService } from '../services/n-fileIO.service';
var NScanDirective = /** @class */ (function () {
    function NScanDirective(fsv) {
        this.fsv = fsv;
        this.onsuccess = new EventEmitter();
        this.onerror = new EventEmitter();
    }
    NScanDirective.prototype.methodToHandleMouseClickAction = function () {
        var _this = this;
        this.getPicture()
            .then(function (sucess) { return _this.onsuccess.emit(sucess); })
            .catch(function (error) { return _this.onerror.emit(error); });
    };
    NScanDirective.prototype.getPicture = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.fsv.scanPicture(_this.scanOptions).then(function (res) {
                if (_this.scanOptions.doUpload) {
                    var options = {
                        'formData': res,
                        'entityName': _this.scanOptions.entityName,
                        'metadata': _this.scanOptions.metadata
                    };
                    _this.fsv.upload(options).then(function (uri) {
                        resolve(uri);
                    }).catch(function (err) { return reject(err); });
                }
                else {
                    resolve(res);
                }
            }).catch(function (err) {
                return reject(err);
            });
        });
    };
    NScanDirective.ctorParameters = function () { return [
        { type: NFileIOService }
    ]; };
    __decorate([
        Input()
    ], NScanDirective.prototype, "scanOptions", void 0);
    __decorate([
        Output()
    ], NScanDirective.prototype, "onsuccess", void 0);
    __decorate([
        Output()
    ], NScanDirective.prototype, "onerror", void 0);
    __decorate([
        HostListener('click')
    ], NScanDirective.prototype, "methodToHandleMouseClickAction", null);
    NScanDirective = __decorate([
        Directive({
            selector: '[n-scan]'
        })
    ], NScanDirective);
    return NScanDirective;
}());
export { NScanDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1zY2FubmVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ldXRyaW5vcy1tb2R1bGUvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1tb2R1bGUvbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLXNjYW5uZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBTTlEO0lBS0Usd0JBQW9CLEdBQW1CO1FBQW5CLFFBQUcsR0FBSCxHQUFHLENBQWdCO1FBSDdCLGNBQVMsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNsRCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFFZixDQUFDO0lBRXJCLHVEQUE4QixHQUE5QjtRQUF2QixpQkFJQztRQUhDLElBQUksQ0FBQyxVQUFVLEVBQUU7YUFDZCxJQUFJLENBQUMsVUFBQyxNQUFNLElBQUssT0FBQSxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBM0IsQ0FBMkIsQ0FBQzthQUM3QyxLQUFLLENBQUMsVUFBQyxLQUFLLElBQUssT0FBQSxLQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBeEIsQ0FBd0IsQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxtQ0FBVSxHQUFWO1FBQUEsaUJBc0JDO1FBckJDLE9BQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTtZQUNqQyxLQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxLQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsR0FBRztnQkFFN0MsSUFBSSxLQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRTtvQkFDN0IsSUFBTSxPQUFPLEdBQUc7d0JBQ2QsVUFBVSxFQUFFLEdBQUc7d0JBQ2YsWUFBWSxFQUFFLEtBQUksQ0FBQyxXQUFXLENBQUMsVUFBVTt3QkFDekMsVUFBVSxFQUFFLEtBQUksQ0FBQyxXQUFXLENBQUMsUUFBUTtxQkFDdEMsQ0FBQztvQkFDRixLQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxHQUFHO3dCQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBQ2YsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFYLENBQVcsQ0FBQyxDQUFDO2lCQUM5QjtxQkFFRDtvQkFDRSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7aUJBQ2Q7WUFDSCxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBQyxHQUFHO2dCQUNYLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOztnQkE5QndCLGNBQWM7O0lBSjlCO1FBQVIsS0FBSyxFQUFFO3VEQUFnQztJQUM5QjtRQUFULE1BQU0sRUFBRTtxREFBbUQ7SUFDbEQ7UUFBVCxNQUFNLEVBQUU7bURBQWlEO0lBSW5DO1FBQXRCLFlBQVksQ0FBQyxPQUFPLENBQUM7d0VBSXJCO0lBWFUsY0FBYztRQUgxQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsVUFBVTtTQUNyQixDQUFDO09BQ1csY0FBYyxDQW9DMUI7SUFBRCxxQkFBQztDQUFBLEFBcENELElBb0NDO1NBcENZLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBIb3N0TGlzdGVuZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTkZpbGVJT1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9uLWZpbGVJTy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTkRpcmVjdGl2ZU9wdGlvbnMgfSBmcm9tICcuL2RpcmVjdGl2ZS5jbGFzcyc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tuLXNjYW5dJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTlNjYW5EaXJlY3RpdmUge1xyXG4gIEBJbnB1dCgpIHNjYW5PcHRpb25zOiBORGlyZWN0aXZlT3B0aW9ucztcclxuICBAT3V0cHV0KCkgb25zdWNjZXNzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCkgb25lcnJvcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZnN2OiBORmlsZUlPU2VydmljZSkgeyB9XHJcblxyXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJykgbWV0aG9kVG9IYW5kbGVNb3VzZUNsaWNrQWN0aW9uKCkge1xyXG4gICAgdGhpcy5nZXRQaWN0dXJlKClcclxuICAgICAgLnRoZW4oKHN1Y2VzcykgPT4gdGhpcy5vbnN1Y2Nlc3MuZW1pdChzdWNlc3MpKVxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB0aGlzLm9uZXJyb3IuZW1pdChlcnJvcikpO1xyXG4gIH1cclxuXHJcbiAgZ2V0UGljdHVyZSgpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgdGhpcy5mc3Yuc2NhblBpY3R1cmUodGhpcy5zY2FuT3B0aW9ucykudGhlbihyZXMgPT4ge1xyXG5cclxuICAgICAgICBpZiAodGhpcy5zY2FuT3B0aW9ucy5kb1VwbG9hZCkge1xyXG4gICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgJ2Zvcm1EYXRhJzogcmVzLFxyXG4gICAgICAgICAgICAnZW50aXR5TmFtZSc6IHRoaXMuc2Nhbk9wdGlvbnMuZW50aXR5TmFtZSxcclxuICAgICAgICAgICAgJ21ldGFkYXRhJzogdGhpcy5zY2FuT3B0aW9ucy5tZXRhZGF0YVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIHRoaXMuZnN2LnVwbG9hZChvcHRpb25zKS50aGVuKHVyaSA9PiB7XHJcbiAgICAgICAgICAgIHJlc29sdmUodXJpKTtcclxuICAgICAgICAgIH0pLmNhdGNoKGVyciA9PiByZWplY3QoZXJyKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICB7XHJcbiAgICAgICAgICByZXNvbHZlKHJlcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXX0=