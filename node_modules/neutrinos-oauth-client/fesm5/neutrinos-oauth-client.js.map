{"version":3,"file":"neutrinos-oauth-client.js","sources":["ng://neutrinos-oauth-client/lib/services/util.service.ts","ng://neutrinos-oauth-client/lib/neutrinos-oauth-client.service.ts","ng://neutrinos-oauth-client/lib/auth-guard.service.ts","ng://neutrinos-oauth-client/lib/neutrinos-oauth.component.ts","ng://neutrinos-oauth-client/lib/cookie-interceptor.service.ts","ng://neutrinos-oauth-client/lib/neutrinos-oauth-client.module.ts"],"sourcesContent":["import { Injectable, isDevMode } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilService {\r\n  private platformType: string;\r\n  private environment;\r\n\r\n  constructor() {\r\n    this.platformType = this.checkPlatformType();\r\n    this.getEnvironment();\r\n  }\r\n\r\n  /**\r\n   * Returns 'mobile' or 'browser' based on the platform\r\n   */\r\n  public getPlatformType(): string {\r\n    return this.platformType;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns env from neutrinos seed app\r\n   */\r\n  private getEnvironment() {\r\n    if (window['neutrinos'] && window['neutrinos']['environments'] && window['neutrinos']['environments']['properties']) {\r\n      // Break the refernce\r\n      this.environment = JSON.parse(JSON.stringify(window['neutrinos']['environments']['properties']));\r\n      // Append the url with / if ssdUrl does not end with /\r\n      if (this.environment['ssdURL']) {\r\n        this.environment['ssdURL'] = this.environment['ssdURL'].endsWith('/') ? this.environment['ssdURL'] :\r\n          (this.environment['ssdURL'] + '/');\r\n      }\r\n      return;\r\n    }\r\n    /*For dev env only */\r\n    this.environment = {\r\n      ssdURL: 'http://localhost:8081/api/',\r\n      useDefaultExceptionUI: true,\r\n      isIDSEnabled: false,\r\n      webAppMountpoint: '',\r\n      production: true\r\n    };\r\n\r\n  }\r\n\r\n  /**\r\n   * Returns 'mobile' or 'browser' based on the platform\r\n   */\r\n  private checkPlatformType(): string {\r\n    // tslint:disable-next-line: no-string-literal\r\n    if (window['device'] && (window['device']['platform'] !== 'browser' || window['device']['platform'] !== 'Browser')) {\r\n      return 'mobile';\r\n      // tslint:disable-next-line: no-string-literal\r\n    } else if (window['device'] && (window['device']['platform'] === 'browser' || window['device']['platform'] === 'Browser')) {\r\n      return 'cordova_browser';\r\n    } else {\r\n      return 'browser';\r\n    }\r\n  }\r\n\r\n  /*URL helper methods */\r\n  public getBaseLoginPath() {\r\n    return `${this.environment.ssdURL}login`;\r\n  }\r\n\r\n  public getWebLoginUrl(redirectTo) {\r\n    redirectTo = this.calcRedirectUrl(redirectTo);\r\n    return `${this.getBaseLoginPath()}?redirectTo=${redirectTo}`;\r\n  }\r\n\r\n  public getMobileLoginUrl() {\r\n    return `${this.getBaseLoginPath()}?isMobile=true`;\r\n  }\r\n\r\n  public getWebLogoutUrl(redirectTo) {\r\n    redirectTo = this.calcRedirectUrl(redirectTo);\r\n    return `${this.environment.ssdURL}logout?redirectTo=${redirectTo}`;\r\n  }\r\n\r\n  public getMobileLogoutUrl() {\r\n    return `${this.environment.ssdURL}logout?isMobile=true`;\r\n  }\r\n\r\n  public getUserInfoUrl() {\r\n    return `${this.environment.ssdURL}user/info`;\r\n  }\r\n\r\n  getSSDBasePath() {\r\n    return `${this.environment.ssdURL}`;\r\n  }\r\n\r\n  /**\r\n   *  Returns a absoulte url for the urlPath\r\n   * @param urlPath - path relative to the current host\r\n   */\r\n  private calcRedirectUrl(urlPath) {\r\n    if (urlPath) {\r\n      let host: any = new URL(window.location.href).origin; // http://xyz.com\r\n      if (!isDevMode()) {\r\n        // Append `webAppMountpoint` to host\r\n        host = (this.environment.webAppMountpoint !== '' && this.environment.webAppMountpoint !== '/')\r\n          ? new URL(this.environment.webAppMountpoint, host).href : host;\r\n        // Get user redirect path with `webAppMountpoint`\r\n        const mountPointWithRedirect = new URL(urlPath, host).pathname;\r\n        return host + mountPointWithRedirect;\r\n      } else {\r\n        return new URL(urlPath, host);\r\n      }\r\n    } else {\r\n      return window.location.href;\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param property - environment property key\r\n   */\r\n  getEnvValue(property): any {\r\n    return this.environment[property];\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { UtilService } from './services/util.service';\r\n\r\ndeclare const cordova;\r\ndeclare const cookieMaster;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NeutrinosOAuthClientService {\r\n\r\n  private cookieName = 'connect.sid';\r\n  private currentUserInfo;\r\n\r\n  private authStateSubject = new Subject();\r\n\r\n  constructor(private util: UtilService, private http: HttpClient) {\r\n  }\r\n\r\n  /**\r\n   * Get user info and tokens of the current logged in user\r\n   */\r\n  get userInfo() {\r\n    return this.currentUserInfo;\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    return this.currentUserInfo ? true : false;\r\n  }\r\n\r\n  private setUserInfo(userInfo) {\r\n    this.currentUserInfo = userInfo;\r\n  }\r\n\r\n  /**\r\n   * Performs authentication based on configuration and returns user info for mobile env and\r\n   * for web app user info is stored in memory. Call userInfo getter method to retrieve userinfo\r\n   * @param redirectBackUrl - url to redirect back to when authentication is done. Valid only for Web.\r\n   * For mobile use the Promise returned to perform post authentication actions\r\n   */\r\n  public login(redirectBackUrl?: string) {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.util.getEnvValue('isIDSEnabled') === 'false') {\r\n        return reject({ message: 'IDS is not enabled in environments' });\r\n      }\r\n      if (this.util.getPlatformType() === 'browser') {\r\n        this.loginWithRedirect(redirectBackUrl);\r\n        return;\r\n      }\r\n      this.loginWithInAppBrowser()\r\n        .then(tokenset => {\r\n          return resolve(tokenset);\r\n        })\r\n        .catch(authError => {\r\n          return reject(authError);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param loginUrl - Login url where SSD is hosted\r\n   */\r\n  private loginWithInAppBrowser() {\r\n    return new Promise(async (resolve, reject) => {\r\n      const scriptURLS = ['/interaction/', '/auth-provider/return']; // execute JS only for this urls\r\n      const script = await this.getScript(); // Get JS which stores guid and device details in local storage of webview\r\n      const inAppBrowserRef = cordova.InAppBrowser.open(this.util.getMobileLoginUrl(), '_blank');\r\n      const executeScriptCB = (event) => {\r\n        if (event && event.hasOwnProperty('type') && event.hasOwnProperty('url') && event.type === 'loadstop'\r\n          && this.isURLMatch(event.url, scriptURLS)) {\r\n          inAppBrowserRef.executeScript({ code: script }, () => { });\r\n        }\r\n      };\r\n      inAppBrowserRef.addEventListener('loadstop', executeScriptCB);\r\n      const exitCB = () => {\r\n        return reject({ code: 'auth-cancel', message: 'Authentication cancelled by user' });\r\n      };\r\n      inAppBrowserRef.addEventListener('message', (message) => {\r\n        if (message && message.data && message.data.auth && message.data.auth === 'success') {\r\n          inAppBrowserRef.removeEventListener('exit', exitCB);\r\n          inAppBrowserRef.close();\r\n          this.persistCookies();\r\n          this.getUserInfo().then(tokenset => {\r\n            return resolve(tokenset);\r\n          }).catch(authErr => {\r\n            return reject(authErr);\r\n          });\r\n        }\r\n      });\r\n      // settle the promise if user closed the in app browser manually\r\n      inAppBrowserRef.addEventListener('exit', exitCB);\r\n    });\r\n  }\r\n\r\n  private isURLMatch(url, compareWith: Array<string>) {\r\n    return compareWith.some(u => url.includes(u));\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns JS as a string to be executed in inAppBrowser which sets guid and device details in localStorage\r\n   */\r\n  private async getScript() {\r\n    const deviceDetails = JSON.stringify(window['device']) || {};\r\n    const guid = await this.getuniqueDeviceID();\r\n    const guidScript = guid ? `localStorage.setItem('guid', '${guid}')` : '';\r\n    const script = `${guidScript}\r\n          localStorage.setItem('additionalInfo', '${deviceDetails}')\r\n          window.isScriptExecuted = true;`;\r\n    return script;\r\n  }\r\n\r\n  private getuniqueDeviceID() {\r\n    return new Promise((resolve, reject) => {\r\n      window['plugins'].uniqueDeviceID.get((guid) => {\r\n        return resolve(guid);\r\n      }, error => {\r\n        return resolve(null);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  public getUserInfo(): Promise<{}> {\r\n    return new Promise((resolve, reject) => {\r\n      let headers = new HttpHeaders();\r\n      /*Edge case: Userinfo is retreived from cache when login page is opened and user cancels the login attempt  */\r\n      headers = headers.set('Cache-Control', 'no-cache');\r\n      headers = headers.set('Pragma', 'no-cache');\r\n      this.http.get(this.util.getUserInfoUrl(), { headers }).subscribe(tokenset => {\r\n        this.setUserInfo(tokenset);\r\n        return resolve(tokenset);\r\n      }, error => {\r\n        this.destroyClientSession();\r\n        return reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  /*If SSD throws 401 during any http request due to refresh token expiry, cookie expiry or access revoke nullify the userinfo in memory\r\n  and emit authState event  */\r\n  public removeUserInfo(errorResponse) {\r\n    this.destroyClientSession();\r\n    this.authStateSubject.next(errorResponse);\r\n  }\r\n\r\n  /**\r\n   * Returns event when Auth state has changed due to session expiry, access revoke or cookie expiry.\r\n   */\r\n  public authState(): Observable<any> {\r\n    return this.authStateSubject.asObservable();\r\n  }\r\n\r\n  private loginWithRedirect(redirectBackUrl): void {\r\n    window.location.href = this.util.getWebLoginUrl(redirectBackUrl);\r\n  }\r\n\r\n  /**\r\n   * Persists cookies in localStorage to be used during next app launch only for IOS\r\n   */\r\n  private persistCookies() {\r\n    if (window['device'] && window['device'].platform === 'iOS') {\r\n      this.getCookie(this.cookieName, this.util.getSSDBasePath())\r\n        .then(connectSid => {\r\n          localStorage.setItem('connectSid', connectSid);\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Restores the connect.sid cookie from session storage during app bootstrap if device is mobile\r\n   */\r\n  public async restoreCookies() {\r\n    const connectSidCookie = localStorage.getItem('connectSid');\r\n    if (!connectSidCookie) {\r\n      return false;\r\n    }\r\n    return await this.setCookie(this.util.getSSDBasePath(), this.cookieName, connectSidCookie);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param url - site where the cookie is stored\r\n   * @param cookieName - name of the cookie to restore\r\n   * @param cookieValue - value of the cookie to restore\r\n   */\r\n  private setCookie(url: string, cookieName: string, cookieValue: string) {\r\n    return new Promise((resolve, reject) => {\r\n      cookieMaster.setCookieValue(url, cookieName, cookieValue, () => {\r\n        return resolve(true);\r\n      }, (error) => {\r\n        return reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param  cookieName - name of the cookie to retrieve\r\n   * @param   url - site where the cookie is stored\r\n   */\r\n  private getCookie(cookieName: string, url: string): any {\r\n    return new Promise((resolve, reject) => {\r\n      cookieMaster.getCookieValue(url, cookieName, (cookie) => {\r\n        return resolve(cookie.cookieValue);\r\n      }, (error) => {\r\n        return reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Logout the current user, destroys session between client and server.\r\n   * @param redirectBackUrl - URL where the user is navigated post logout. Valid only for Web.\r\n   * For mobile use the Promise returned to perform post authentication actions\r\n   */\r\n  public logout(redirectBackUrl?: string): Promise<{}> {\r\n    const logoutUrl = (this.util.getPlatformType() === 'browser') ? this.util.getWebLogoutUrl(redirectBackUrl)\r\n      : this.util.getMobileLogoutUrl();\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(logoutUrl).subscribe(idsLogoutInfo => {\r\n        this.destroyIDSSession(idsLogoutInfo)\r\n          .then(() => {\r\n            return resolve();\r\n          })\r\n          .catch(logoutErr => {\r\n            return reject(logoutErr);\r\n          });\r\n      }, logoutError => {\r\n        return reject(logoutError);\r\n      });\r\n    });\r\n  }\r\n\r\n  private destroyIDSSession(idsInfo) {\r\n    return new Promise((resolve, reject) => {\r\n      if (idsInfo['sessionExists'] === false) {\r\n        // No session present with SSD due to cookie expiry\r\n        this.destroyClientSession();\r\n        this.authStateSubject.next({ code: 'NO_SESSION', message: 'User session has already expired' });\r\n        return resolve();\r\n      }\r\n      if (this.util.getPlatformType() === 'browser') {\r\n        window.location.href = idsInfo['idsURL'];\r\n      } else {\r\n        this.logoutWithInappBrowser(idsInfo['idsURL'])\r\n          .then(() => {\r\n            return resolve();\r\n          })\r\n          .catch(sessionError => {\r\n            return reject(sessionError);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param idsLogoutUrl - IDS logout url\r\n   * Opens InApp browser and destroys the session\r\n   */\r\n  private logoutWithInappBrowser(idsLogoutUrl: string) {\r\n    return new Promise((resolve, reject) => {\r\n      const exitCB = () => {\r\n        return reject({ code: 'auth-cancel', message: 'Authentication cancelled by user' });\r\n      };\r\n      const inAppBrowserRef = cordova.InAppBrowser.open(idsLogoutUrl, '_blank');\r\n      inAppBrowserRef.addEventListener('message', (message) => {\r\n        // Remove exit listener if script closed the in app browser\r\n        if (message && message.data && message.data.auth && message.data.auth === 'success') {\r\n          inAppBrowserRef.removeEventListener('exit', exitCB);\r\n          inAppBrowserRef.close();\r\n          this.destroyClientSession();\r\n          return resolve();\r\n        }\r\n      });\r\n      // settle the promise if user closed the in app browser manually\r\n      inAppBrowserRef.addEventListener('exit', exitCB);\r\n    });\r\n  }\r\n\r\n  /*Remove persisted cookies in local storage and nullify user info */\r\n  private destroyClientSession() {\r\n    this.setUserInfo(null);\r\n    window.localStorage.removeItem('connectSid');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, RouterStateSnapshot, Router, Route, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NeutrinosAuthGuardService {\r\n\r\n  private currUrl;\r\n  \r\n  constructor(private _neutrinosOAuthClientService: NeutrinosOAuthClientService, private _router: Router, private _arouter: ActivatedRoute) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean>   {\r\n    \r\n    return new Promise ((resolve, reject) => {\r\n      this.currUrl = state.url;\r\n      if(this._neutrinosOAuthClientService.isLoggedIn) {\r\n        return resolve(true);\r\n      } else {\r\n        this._neutrinosOAuthClientService.login().then(tokenSet => {\r\n          this._router.navigate([this.currUrl]);\r\n          return resolve(true);\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          if(err && err.code == 'auth-cancel') {\r\n            // Added setTimeout for reloading the current route\r\n            setTimeout(() => {\r\n              this._router.navigateByUrl(this.currUrl,{skipLocationChange: true}).then(() => {\r\n                return resolve(false);\r\n              });\r\n            }, 500);\r\n          } else {\r\n            return resolve(false);\r\n          }\r\n        })\r\n      }\r\n    })\r\n  } \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'lib-neutrinos-oauth',\r\n  template: `\r\n   NOTE: use this component only for testing. Not intended for production\r\n\r\n      <button (click)=\"login()\" >  Login </button>\r\n      <button (click)=\"token()\" > Get tokenset</button>\r\n      <button (click)=\"logout()\" > Logout </button>\r\n      <button (click)=\"userinfo()\" > In memory user info </button>\r\n      <button (click)=\"httpTest()\" > Http Interceptor test </button>\r\n      `,\r\n  styles: []\r\n})\r\nexport class NeutrinosOauthComponent implements OnInit {\r\n\r\n  constructor(public neutrinosOauthService: NeutrinosOAuthClientService, private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.neutrinosOauthService.authState().subscribe(state => {\r\n      console.log(state);\r\n    });\r\n  }\r\n\r\n  login() {\r\n    const a = this.neutrinosOauthService.login('/i-am-loggedin').then(tokens => {\r\n      console.log('got tokens in component', tokens);\r\n    }).catch(e => {\r\n      console.error(e);\r\n    });\r\n    // console.log(a);\r\n  }\r\n\r\n  token() {\r\n    this.neutrinosOauthService.getUserInfo().then(t => {\r\n      console.log('t', t);\r\n    }).catch(console.log);\r\n  }\r\n\r\n  logout() {\r\n    this.neutrinosOauthService.logout()\r\n  }\r\n\r\n  userinfo() {\r\n    alert(JSON.stringify(this.neutrinosOauthService.userInfo))\r\n    console.log(this.neutrinosOauthService.userInfo);\r\n  }\r\n\r\n  httpTest() {\r\n    this.http.get('http://localhost:8081/api/ping').subscribe(res => {\r\n      console.log(res);\r\n    }, e => {\r\n      console.error(e);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { UtilService } from './services/util.service';\r\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CookieInterceptorService {\r\n\r\n  constructor(private utilService: UtilService, private neutrinosOAuthClientService: NeutrinosOAuthClientService) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    /* withCredentials adds cookies to the request for cross site (Only ssd urls).*/\r\n    const baseUrl = this.utilService.getSSDBasePath();\r\n    const isSSD = (baseUrl !== '' && request.url.includes(baseUrl));\r\n    if (isSSD && this.isCrossDomain(baseUrl)) {\r\n      request = request.clone({\r\n        withCredentials: true\r\n      });\r\n    }\r\n    return next.handle(request).pipe(map(event => {\r\n      return event;\r\n    }), catchError((errorResponse: HttpErrorResponse) => {\r\n      /*Intercept all requests and remove userinfo and cookies when status is 401 with code SESSION_EXPIRED, which means\r\n      * cookies have expired or access has been revoked by the OAuth providers hence IDS rejected.  */\r\n      if (errorResponse && errorResponse.hasOwnProperty('status') && errorResponse.status === 401 &&\r\n        errorResponse.error.hasOwnProperty('code')) {\r\n        this.neutrinosOAuthClientService.removeUserInfo(errorResponse.error);\r\n      }\r\n      return throwError(errorResponse);\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Returns true is the ssd url is running on a different domain than where UI is hosted.\r\n   * For mobile Returns false always since UI is already bundled with cordova\r\n   * If the user is not using IDS and is cross domain isIDSEnabled can be set to false to skip adding withCredentials\r\n   * @param ssdUrl - string\r\n   */\r\n  private isCrossDomain(ssdUrl): boolean {\r\n    try {\r\n      ssdUrl = new URL(ssdUrl);\r\n      return (this.utilService.getPlatformType() === 'browser' && (ssdUrl.host !== location.host)\r\n        && this.utilService.getEnvValue('isIDSEnabled') === 'true');\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { NeutrinosOauthComponent } from './neutrinos-oauth.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CookieInterceptorService } from './cookie-interceptor.service';\r\nimport { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';\r\nimport { UtilService } from './services/util.service';\r\n\r\nexport function getTokens(neutrinosOAuthService: NeutrinosOAuthClientService, utilService: UtilService) {\r\n  return () => {\r\n    /**\r\n     * For ios restore the cookies and get userInfo since iOS webview does not\r\n     * persisit the cookie between app launches\r\n     */\r\n    if (utilService.getEnvValue('isIDSEnabled') === 'true') {\r\n      if (window['device'] && window['device'].platform === 'iOS' ) {\r\n        return neutrinosOAuthService.restoreCookies().then((cookieExist) => {\r\n          console.log('cookieExist' + cookieExist);\r\n          cookieExist ? neutrinosOAuthService.getUserInfo()\r\n          .catch(userInfoErr => {\r\n            console.log(userInfoErr);\r\n          }) : null;\r\n        });\r\n      } else {\r\n        // Cannot get cookie for cross domain using JS. hence calling userinfo always\r\n        return neutrinosOAuthService.getUserInfo()\r\n        .catch(userInfoErr => {\r\n          console.log(userInfoErr);\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n// @dynamic (https://github.com/ng-packagr/ng-packagr/issues/641)\r\n@NgModule({\r\n  declarations: [NeutrinosOauthComponent],\r\n  imports: [\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: CookieInterceptorService,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: getTokens,\r\n      deps: [NeutrinosOAuthClientService, UtilService],\r\n      multi: true\r\n    },\r\n  ]\r\n})\r\nexport class NeutrinosOAuthClientModule { }\r\n"],"names":[],"mappings":"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"}