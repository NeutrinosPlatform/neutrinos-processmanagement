/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/util.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, isDevMode } from '@angular/core';
import * as i0 from "@angular/core";
var UtilService = /** @class */ (function () {
    function UtilService() {
        this.platformType = this.checkPlatformType();
        this.getEnvironment();
    }
    /**
     * Returns 'mobile' or 'browser' based on the platform
     */
    /**
     * Returns 'mobile' or 'browser' based on the platform
     * @return {?}
     */
    UtilService.prototype.getPlatformType = /**
     * Returns 'mobile' or 'browser' based on the platform
     * @return {?}
     */
    function () {
        return this.platformType;
    };
    /**
     * Returns env from neutrinos seed app
     */
    /**
     * Returns env from neutrinos seed app
     * @private
     * @return {?}
     */
    UtilService.prototype.getEnvironment = /**
     * Returns env from neutrinos seed app
     * @private
     * @return {?}
     */
    function () {
        if (window['neutrinos'] && window['neutrinos']['environments'] && window['neutrinos']['environments']['properties']) {
            // Break the refernce
            this.environment = JSON.parse(JSON.stringify(window['neutrinos']['environments']['properties']));
            // Append the url with / if ssdUrl does not end with /
            if (this.environment['ssdURL']) {
                this.environment['ssdURL'] = this.environment['ssdURL'].endsWith('/') ? this.environment['ssdURL'] :
                    (this.environment['ssdURL'] + '/');
            }
            return;
        }
        /*For dev env only */
        this.environment = {
            ssdURL: 'http://localhost:8081/api/',
            useDefaultExceptionUI: true,
            isIDSEnabled: false,
            webAppMountpoint: '',
            production: true
        };
    };
    /**
     * Returns 'mobile' or 'browser' based on the platform
     */
    /**
     * Returns 'mobile' or 'browser' based on the platform
     * @private
     * @return {?}
     */
    UtilService.prototype.checkPlatformType = /**
     * Returns 'mobile' or 'browser' based on the platform
     * @private
     * @return {?}
     */
    function () {
        // tslint:disable-next-line: no-string-literal
        if (window['device'] && (window['device']['platform'] !== 'browser' || window['device']['platform'] !== 'Browser')) {
            return 'mobile';
            // tslint:disable-next-line: no-string-literal
        }
        else if (window['device'] && (window['device']['platform'] === 'browser' || window['device']['platform'] === 'Browser')) {
            return 'cordova_browser';
        }
        else {
            return 'browser';
        }
    };
    /*URL helper methods */
    /*URL helper methods */
    /**
     * @return {?}
     */
    UtilService.prototype.getBaseLoginPath = /*URL helper methods */
    /**
     * @return {?}
     */
    function () {
        return this.environment.ssdURL + "login";
    };
    /**
     * @param {?} redirectTo
     * @return {?}
     */
    UtilService.prototype.getWebLoginUrl = /**
     * @param {?} redirectTo
     * @return {?}
     */
    function (redirectTo) {
        redirectTo = this.calcRedirectUrl(redirectTo);
        return this.getBaseLoginPath() + "?redirectTo=" + redirectTo;
    };
    /**
     * @return {?}
     */
    UtilService.prototype.getMobileLoginUrl = /**
     * @return {?}
     */
    function () {
        return this.getBaseLoginPath() + "?isMobile=true";
    };
    /**
     * @param {?} redirectTo
     * @return {?}
     */
    UtilService.prototype.getWebLogoutUrl = /**
     * @param {?} redirectTo
     * @return {?}
     */
    function (redirectTo) {
        redirectTo = this.calcRedirectUrl(redirectTo);
        return this.environment.ssdURL + "logout?redirectTo=" + redirectTo;
    };
    /**
     * @return {?}
     */
    UtilService.prototype.getMobileLogoutUrl = /**
     * @return {?}
     */
    function () {
        return this.environment.ssdURL + "logout?isMobile=true";
    };
    /**
     * @return {?}
     */
    UtilService.prototype.getUserInfoUrl = /**
     * @return {?}
     */
    function () {
        return this.environment.ssdURL + "user/info";
    };
    /**
     * @return {?}
     */
    UtilService.prototype.getSSDBasePath = /**
     * @return {?}
     */
    function () {
        return "" + this.environment.ssdURL;
    };
    /**
     *  Returns a absoulte url for the urlPath
     * @param urlPath - path relative to the current host
     */
    /**
     *  Returns a absoulte url for the urlPath
     * @private
     * @param {?} urlPath - path relative to the current host
     * @return {?}
     */
    UtilService.prototype.calcRedirectUrl = /**
     *  Returns a absoulte url for the urlPath
     * @private
     * @param {?} urlPath - path relative to the current host
     * @return {?}
     */
    function (urlPath) {
        if (urlPath) {
            /** @type {?} */
            var host = new URL(window.location.href).origin;
            if (!isDevMode()) {
                // Append `webAppMountpoint` to host
                host = (this.environment.webAppMountpoint !== '' && this.environment.webAppMountpoint !== '/')
                    ? new URL(this.environment.webAppMountpoint, host).href : host;
                // Get user redirect path with `webAppMountpoint`
                /** @type {?} */
                var mountPointWithRedirect = new URL(urlPath, host).pathname;
                return host + mountPointWithRedirect;
            }
            else {
                return new URL(urlPath, host);
            }
        }
        else {
            return window.location.href;
        }
    };
    /**
     *
     * @param property - environment property key
     */
    /**
     *
     * @param {?} property - environment property key
     * @return {?}
     */
    UtilService.prototype.getEnvValue = /**
     *
     * @param {?} property - environment property key
     * @return {?}
     */
    function (property) {
        return this.environment[property];
    };
    UtilService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    UtilService.ctorParameters = function () { return []; };
    /** @nocollapse */ UtilService.ɵprov = i0.ɵɵdefineInjectable({ factory: function UtilService_Factory() { return new UtilService(); }, token: UtilService, providedIn: "root" });
    return UtilService;
}());
export { UtilService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    UtilService.prototype.platformType;
    /**
     * @type {?}
     * @private
     */
    UtilService.prototype.environment;
}
//# sourceMappingURL=data:application/json;base64,