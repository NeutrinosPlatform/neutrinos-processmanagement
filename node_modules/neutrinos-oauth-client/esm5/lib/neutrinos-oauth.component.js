/**
 * @fileoverview added by tsickle
 * Generated from: lib/neutrinos-oauth.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { NeutrinosOAuthClientService } from './neutrinos-oauth-client.service';
import { HttpClient } from '@angular/common/http';
var NeutrinosOauthComponent = /** @class */ (function () {
    function NeutrinosOauthComponent(neutrinosOauthService, http) {
        this.neutrinosOauthService = neutrinosOauthService;
        this.http = http;
    }
    /**
     * @return {?}
     */
    NeutrinosOauthComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.neutrinosOauthService.authState().subscribe((/**
         * @param {?} state
         * @return {?}
         */
        function (state) {
            console.log(state);
        }));
    };
    /**
     * @return {?}
     */
    NeutrinosOauthComponent.prototype.login = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var a = this.neutrinosOauthService.login('/i-am-loggedin').then((/**
         * @param {?} tokens
         * @return {?}
         */
        function (tokens) {
            console.log('got tokens in component', tokens);
        })).catch((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            console.error(e);
        }));
        // console.log(a);
    };
    /**
     * @return {?}
     */
    NeutrinosOauthComponent.prototype.token = /**
     * @return {?}
     */
    function () {
        this.neutrinosOauthService.getUserInfo().then((/**
         * @param {?} t
         * @return {?}
         */
        function (t) {
            console.log('t', t);
        })).catch(console.log);
    };
    /**
     * @return {?}
     */
    NeutrinosOauthComponent.prototype.logout = /**
     * @return {?}
     */
    function () {
        this.neutrinosOauthService.logout();
    };
    /**
     * @return {?}
     */
    NeutrinosOauthComponent.prototype.userinfo = /**
     * @return {?}
     */
    function () {
        alert(JSON.stringify(this.neutrinosOauthService.userInfo));
        console.log(this.neutrinosOauthService.userInfo);
    };
    /**
     * @return {?}
     */
    NeutrinosOauthComponent.prototype.httpTest = /**
     * @return {?}
     */
    function () {
        this.http.get('http://localhost:8081/api/ping').subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            console.log(res);
        }), (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            console.error(e);
        }));
    };
    NeutrinosOauthComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-neutrinos-oauth',
                    template: "\n   NOTE: use this component only for testing. Not intended for production\n\n      <button (click)=\"login()\" >  Login </button>\n      <button (click)=\"token()\" > Get tokenset</button>\n      <button (click)=\"logout()\" > Logout </button>\n      <button (click)=\"userinfo()\" > In memory user info </button>\n      <button (click)=\"httpTest()\" > Http Interceptor test </button>\n      "
                }] }
    ];
    /** @nocollapse */
    NeutrinosOauthComponent.ctorParameters = function () { return [
        { type: NeutrinosOAuthClientService },
        { type: HttpClient }
    ]; };
    return NeutrinosOauthComponent;
}());
export { NeutrinosOauthComponent };
if (false) {
    /** @type {?} */
    NeutrinosOauthComponent.prototype.neutrinosOauthService;
    /**
     * @type {?}
     * @private
     */
    NeutrinosOauthComponent.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV1dHJpbm9zLW9hdXRoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25ldXRyaW5vcy1vYXV0aC1jbGllbnQvIiwic291cmNlcyI6WyJsaWIvbmV1dHJpbm9zLW9hdXRoLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDL0UsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRWxEO0lBZUUsaUNBQW1CLHFCQUFrRCxFQUFVLElBQWdCO1FBQTVFLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBNkI7UUFBVSxTQUFJLEdBQUosSUFBSSxDQUFZO0lBQUksQ0FBQzs7OztJQUVwRywwQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMscUJBQXFCLENBQUMsU0FBUyxFQUFFLENBQUMsU0FBUzs7OztRQUFDLFVBQUEsS0FBSztZQUNwRCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JCLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7OztJQUVELHVDQUFLOzs7SUFBTDs7WUFDUSxDQUFDLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLElBQUk7Ozs7UUFBQyxVQUFBLE1BQU07WUFDdEUsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNqRCxDQUFDLEVBQUMsQ0FBQyxLQUFLOzs7O1FBQUMsVUFBQSxDQUFDO1lBQ1IsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuQixDQUFDLEVBQUM7UUFDRixrQkFBa0I7SUFDcEIsQ0FBQzs7OztJQUVELHVDQUFLOzs7SUFBTDtRQUNFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxJQUFJOzs7O1FBQUMsVUFBQSxDQUFDO1lBQzdDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLENBQUMsRUFBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDeEIsQ0FBQzs7OztJQUVELHdDQUFNOzs7SUFBTjtRQUNFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxNQUFNLEVBQUUsQ0FBQTtJQUNyQyxDQUFDOzs7O0lBRUQsMENBQVE7OztJQUFSO1FBQ0UsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUE7UUFDMUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7OztJQUVELDBDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGdDQUFnQyxDQUFDLENBQUMsU0FBUzs7OztRQUFDLFVBQUEsR0FBRztZQUMzRCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLENBQUM7Ozs7UUFBRSxVQUFBLENBQUM7WUFDRixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25CLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBckRGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUscUJBQXFCO29CQUMvQixRQUFRLEVBQUUsNllBUUw7aUJBRU47Ozs7Z0JBZlEsMkJBQTJCO2dCQUMzQixVQUFVOztJQXlEbkIsOEJBQUM7Q0FBQSxBQXZERCxJQXVEQztTQTFDWSx1QkFBdUI7OztJQUV0Qix3REFBeUQ7Ozs7O0lBQUUsdUNBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmV1dHJpbm9zT0F1dGhDbGllbnRTZXJ2aWNlIH0gZnJvbSAnLi9uZXV0cmlub3Mtb2F1dGgtY2xpZW50LnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItbmV1dHJpbm9zLW9hdXRoJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICBOT1RFOiB1c2UgdGhpcyBjb21wb25lbnQgb25seSBmb3IgdGVzdGluZy4gTm90IGludGVuZGVkIGZvciBwcm9kdWN0aW9uXHJcblxyXG4gICAgICA8YnV0dG9uIChjbGljayk9XCJsb2dpbigpXCIgPiAgTG9naW4gPC9idXR0b24+XHJcbiAgICAgIDxidXR0b24gKGNsaWNrKT1cInRva2VuKClcIiA+IEdldCB0b2tlbnNldDwvYnV0dG9uPlxyXG4gICAgICA8YnV0dG9uIChjbGljayk9XCJsb2dvdXQoKVwiID4gTG9nb3V0IDwvYnV0dG9uPlxyXG4gICAgICA8YnV0dG9uIChjbGljayk9XCJ1c2VyaW5mbygpXCIgPiBJbiBtZW1vcnkgdXNlciBpbmZvIDwvYnV0dG9uPlxyXG4gICAgICA8YnV0dG9uIChjbGljayk9XCJodHRwVGVzdCgpXCIgPiBIdHRwIEludGVyY2VwdG9yIHRlc3QgPC9idXR0b24+XHJcbiAgICAgIGAsXHJcbiAgc3R5bGVzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmV1dHJpbm9zT2F1dGhDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgbmV1dHJpbm9zT2F1dGhTZXJ2aWNlOiBOZXV0cmlub3NPQXV0aENsaWVudFNlcnZpY2UsIHByaXZhdGUgaHR0cDogSHR0cENsaWVudCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5uZXV0cmlub3NPYXV0aFNlcnZpY2UuYXV0aFN0YXRlKCkuc3Vic2NyaWJlKHN0YXRlID0+IHtcclxuICAgICAgY29uc29sZS5sb2coc3RhdGUpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBsb2dpbigpIHtcclxuICAgIGNvbnN0IGEgPSB0aGlzLm5ldXRyaW5vc09hdXRoU2VydmljZS5sb2dpbignL2ktYW0tbG9nZ2VkaW4nKS50aGVuKHRva2VucyA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdnb3QgdG9rZW5zIGluIGNvbXBvbmVudCcsIHRva2Vucyk7XHJcbiAgICB9KS5jYXRjaChlID0+IHtcclxuICAgICAgY29uc29sZS5lcnJvcihlKTtcclxuICAgIH0pO1xyXG4gICAgLy8gY29uc29sZS5sb2coYSk7XHJcbiAgfVxyXG5cclxuICB0b2tlbigpIHtcclxuICAgIHRoaXMubmV1dHJpbm9zT2F1dGhTZXJ2aWNlLmdldFVzZXJJbmZvKCkudGhlbih0ID0+IHtcclxuICAgICAgY29uc29sZS5sb2coJ3QnLCB0KTtcclxuICAgIH0pLmNhdGNoKGNvbnNvbGUubG9nKTtcclxuICB9XHJcblxyXG4gIGxvZ291dCgpIHtcclxuICAgIHRoaXMubmV1dHJpbm9zT2F1dGhTZXJ2aWNlLmxvZ291dCgpXHJcbiAgfVxyXG5cclxuICB1c2VyaW5mbygpIHtcclxuICAgIGFsZXJ0KEpTT04uc3RyaW5naWZ5KHRoaXMubmV1dHJpbm9zT2F1dGhTZXJ2aWNlLnVzZXJJbmZvKSlcclxuICAgIGNvbnNvbGUubG9nKHRoaXMubmV1dHJpbm9zT2F1dGhTZXJ2aWNlLnVzZXJJbmZvKTtcclxuICB9XHJcblxyXG4gIGh0dHBUZXN0KCkge1xyXG4gICAgdGhpcy5odHRwLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4MDgxL2FwaS9waW5nJykuc3Vic2NyaWJlKHJlcyA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICB9LCBlID0+IHtcclxuICAgICAgY29uc29sZS5lcnJvcihlKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbn1cclxuIl19