var NSessionStorageService_1;
import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
let NSessionStorageService = NSessionStorageService_1 = class NSessionStorageService {
    constructor() {
        NSessionStorageService_1.sessionStorageCache = sessionStorage;
    }
    getSessionStorage() {
        return NSessionStorageService_1.sessionStorageCache;
    }
    setValue(key, value) {
        NSessionStorageService_1.sessionStorageCache[key] = value;
        sessionStorage.setItem(key, value);
    }
    getValue(key) {
        if (!NSessionStorageService_1.sessionStorageCache[key]) {
            return null;
        }
        try {
            const obj = NSessionStorageService_1.sessionStorageCache[key];
            return JSON.parse(obj);
        }
        catch (error) {
            return NSessionStorageService_1.sessionStorageCache[key];
        }
    }
    remove(key) {
        if (NSessionStorageService_1.sessionStorageCache.hasOwnProperty(key)) {
            delete NSessionStorageService_1.sessionStorageCache[key];
            sessionStorage.removeItem(key);
        }
    }
    clearSessionStorage() {
        NSessionStorageService_1.sessionStorageCache = {};
        sessionStorage.clear();
    }
};
NSessionStorageService.sessionStorageCache = {};
NSessionStorageService = NSessionStorageService_1 = __decorate([
    Injectable()
], NSessionStorageService);
export { NSessionStorageService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1zZXNzaW9uU3RvcmFnZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmV1dHJpbm9zLXNlZWQtc2VydmljZXMvIiwic291cmNlcyI6WyJzcmMvYXBwL25ldXRyaW5vcy1zZWVkLXNlcnZpY2VzL24tc2Vzc2lvblN0b3JhZ2Uuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsSUFBYSxzQkFBc0IsOEJBQW5DLE1BQWEsc0JBQXNCO0lBRWpDO1FBQ0Usd0JBQXNCLENBQUMsbUJBQW1CLEdBQUcsY0FBYyxDQUFDO0lBQzlELENBQUM7SUFFRCxpQkFBaUI7UUFDZixPQUFPLHdCQUFzQixDQUFDLG1CQUFtQixDQUFDO0lBQ3BELENBQUM7SUFFRCxRQUFRLENBQUMsR0FBRyxFQUFFLEtBQUs7UUFDakIsd0JBQXNCLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQ3hELGNBQWMsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxRQUFRLENBQUMsR0FBRztRQUNWLElBQUksQ0FBQyx3QkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNwRCxPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsSUFBSTtZQUNGLE1BQU0sR0FBRyxHQUFHLHdCQUFzQixDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzVELE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN4QjtRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ2QsT0FBTyx3QkFBc0IsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN4RDtJQUNILENBQUM7SUFFRCxNQUFNLENBQUMsR0FBRztRQUNSLElBQUksd0JBQXNCLENBQUMsbUJBQW1CLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2xFLE9BQU8sd0JBQXNCLENBQUMsbUJBQW1CLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDdkQsY0FBYyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNoQztJQUNILENBQUM7SUFFRCxtQkFBbUI7UUFDakIsd0JBQXNCLENBQUMsbUJBQW1CLEdBQUcsRUFBRSxDQUFDO1FBQ2hELGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN6QixDQUFDO0NBRUYsQ0FBQTtBQXRDUSwwQ0FBbUIsR0FBUSxFQUFFLENBQUM7QUFEMUIsc0JBQXNCO0lBRGxDLFVBQVUsRUFBRTtHQUNBLHNCQUFzQixDQXVDbEM7U0F2Q1ksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTlNlc3Npb25TdG9yYWdlU2VydmljZSB7XHJcbiAgc3RhdGljIHNlc3Npb25TdG9yYWdlQ2FjaGU6IGFueSA9IHt9O1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgTlNlc3Npb25TdG9yYWdlU2VydmljZS5zZXNzaW9uU3RvcmFnZUNhY2hlID0gc2Vzc2lvblN0b3JhZ2U7XHJcbiAgfVxyXG5cclxuICBnZXRTZXNzaW9uU3RvcmFnZSgpIHtcclxuICAgIHJldHVybiBOU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlLnNlc3Npb25TdG9yYWdlQ2FjaGU7XHJcbiAgfVxyXG5cclxuICBzZXRWYWx1ZShrZXksIHZhbHVlKSB7XHJcbiAgICBOU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlLnNlc3Npb25TdG9yYWdlQ2FjaGVba2V5XSA9IHZhbHVlO1xyXG4gICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcclxuICB9XHJcblxyXG4gIGdldFZhbHVlKGtleSkge1xyXG4gICAgaWYgKCFOU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlLnNlc3Npb25TdG9yYWdlQ2FjaGVba2V5XSkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IG9iaiA9IE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZVtrZXldO1xyXG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShvYmopO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZVtrZXldO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVtb3ZlKGtleSkge1xyXG4gICAgaWYgKE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgIGRlbGV0ZSBOU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlLnNlc3Npb25TdG9yYWdlQ2FjaGVba2V5XTtcclxuICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY2xlYXJTZXNzaW9uU3RvcmFnZSgpIHtcclxuICAgIE5TZXNzaW9uU3RvcmFnZVNlcnZpY2Uuc2Vzc2lvblN0b3JhZ2VDYWNoZSA9IHt9O1xyXG4gICAgc2Vzc2lvblN0b3JhZ2UuY2xlYXIoKTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==