{"version":3,"file":"neutrinos-seed-services.js","sources":["ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-system.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-sessionStorage.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-util.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-localStorage.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-token.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-pubSub.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-logout.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-HTTPLoader.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-notification.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-login.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-authGaurd.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-dataModel.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-HTTP.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-snackbar.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/snackbar/snack/snack.component.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/snackbar/snackbar/snackbar.component.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/neutrinos-seed-services.module.ts","ng://neutrinos-seed-services/neutrinos-seed-services.ts"],"sourcesContent":["// import { environment } from '../../environments/environment';\r\nimport { NUtility } from './n-util.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { Injectable } from '@angular/core';\r\nimport * as platform from 'platform';\r\n\r\n// @dynamic\r\nexport class NSystemService {\r\n  private static instance: NSystemService;\r\n\r\n  private _deviceType: string;\r\n  // private _deviceUUID;\r\n  uuid;\r\n  properties;\r\n  static envProperties;\r\n  static getInstance() {\r\n    if (!this.instance) {\r\n      this.instance = new NSystemService();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  private constructor() {\r\n    this._deviceType = this.checkDevice();\r\n  }\r\n\r\n  /**\r\n   * Seter and getter for the environments\r\n   */\r\n\r\n  // set environments(properties) {\r\n  //   console.log(properties);\r\n  //   NSystemService.envProperties = properties;\r\n  //   this.properties = this.getVal('properties');\r\n  // }\r\n\r\n  // get environments() {\r\n  //   return NSystemService.envProperties;\r\n  // }\r\n\r\n  /**\r\n   * Returna 'mobile' or 'browser' based on the platform\r\n   */\r\n  checkDevice(): string {\r\n    if (window['device'] && (window['device']['platform'] != 'browser' || window['device']['platform'] != 'Browser')) {\r\n      return 'mobile';\r\n    } else if (window['device'] && (window['device']['platform'] == 'browser' || window['device']['platform'] == 'Browser')) {\r\n      return 'cordova_browser';\r\n    } else {\r\n      return 'browser';\r\n    }\r\n  }\r\n\r\n\r\n  public get deviceType() {\r\n    return this._deviceType;\r\n  }\r\n\r\n\r\n\r\n  public getVal(key) {\r\n    if (!NSystemService.envProperties) {\r\n      NSystemService.envProperties = window['neutrinos']['environments'];\r\n      this.properties = NSystemService.envProperties.properties;\r\n    }\r\n\r\n    if (key == 'properties') {\r\n      if (NSystemService.envProperties) {\r\n        return NSystemService.envProperties.properties;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    } else {\r\n      if (NSystemService.envProperties && NSystemService.envProperties.properties) {\r\n        return NSystemService.envProperties.properties[key];\r\n      } else {\r\n        return undefined;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  public isAndroid() {\r\n    if (window['device'] && window['device']['platform'] == 'Android') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isIOS() {\r\n    if (window['device'] && window['device']['platform'] == 'iOS') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getAndroidVersion() {\r\n    if (this.isAndroid()) {\r\n      return window['device']['version'];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public getAuthUrl() {\r\n    // this.properties = this.getVal('properties');\r\n    return this.properties.baseUrl + this.properties.tenantName + '/auth/';\r\n  }\r\n  public getTenantUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/';\r\n  }\r\n\r\n  public getAppUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/' + this.properties.appName + '/';\r\n  }\r\n\r\n  public getProxyUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/';\r\n  }\r\n\r\n  public getDataModelUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/datamodel/' + this.properties.appDataSource + '/' + this.properties.appName + '/';\r\n  }\r\n\r\n  public getFileIOUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/fileio/' +\r\n      this.properties.appDataSource + '/' + this.properties.appName + '/';\r\n  }\r\n\r\n  public getPlatformDetails(type) {\r\n    const pDetails = {\r\n      platform: platform.os.family,\r\n      platformVersion: platform.os.version,\r\n    };\r\n    if (type === 'browser') {\r\n      return Object.assign(pDetails, {\r\n        type: 'browser',\r\n        browser: platform.name,\r\n        browserVersion: platform.version,\r\n      });\r\n    } else if (type === 'mobile' || type === 'cordova_browser') {\r\n      return Object.assign(pDetails, {\r\n        type: 'mobile',\r\n        model: window['device'].model,\r\n        manufacturer: window['device'].manufacturer,\r\n        isVirtual: window['device'].isVirtual\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NSessionStorageService {\r\n  static sessionStorageCache: any = {};\r\n  constructor() {\r\n    NSessionStorageService.sessionStorageCache = sessionStorage;\r\n  }\r\n\r\n  getSessionStorage() {\r\n    return NSessionStorageService.sessionStorageCache;\r\n  }\r\n\r\n  setValue(key, value) {\r\n    NSessionStorageService.sessionStorageCache[key] = value;\r\n    sessionStorage.setItem(key, value);\r\n  }\r\n\r\n  getValue(key) {\r\n    if (!NSessionStorageService.sessionStorageCache[key]) {\r\n      return null;\r\n    }\r\n    try {\r\n      const obj = NSessionStorageService.sessionStorageCache[key];\r\n      return JSON.parse(obj);\r\n    } catch (error) {\r\n      return NSessionStorageService.sessionStorageCache[key];\r\n    }\r\n  }\r\n\r\n  remove(key) {\r\n    if (NSessionStorageService.sessionStorageCache.hasOwnProperty(key)) {\r\n      delete NSessionStorageService.sessionStorageCache[key];\r\n      sessionStorage.removeItem(key);\r\n    }\r\n  }\r\n\r\n  clearSessionStorage() {\r\n    NSessionStorageService.sessionStorageCache = {};\r\n    sessionStorage.clear();\r\n  }\r\n\r\n}\r\n","export class NUtility {\r\n  \r\n    constructor() { }\r\n  \r\n    generateUUID() {\r\n      return this.__s4() + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + this.__s4() + this.__s4();\r\n    }\r\n  \r\n    __s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    }\r\n  }","import { NSystemService } from './n-system.service';\r\nimport { Injectable } from '@angular/core';\r\nimport {NgForage, NgForageCache, NgForageConfig, Driver} from 'ngforage';\r\nimport { NUtility } from './n-util.service';\r\n\r\n@Injectable()\r\nexport class NLocalStorageService {\r\n\r\n  storageCache: any = {};\r\n  private _deviceUUID;\r\n  private nativeStorageI;\r\n  constructor(private ngfConfig?: NgForageConfig, private readonly ngf?: NgForage, private readonly ngfCache?: NgForageCache) {\r\n  }\r\n\r\n\r\n\r\n  initStorage() {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova']) {\r\n        this.initNgForage();\r\n      }\r\n      this.ngf.iterate((value, key, iteratonNumber) => {\r\n        this.storageCache[key] = value;\r\n      }).then(result => {\r\n        this.checkDeviceId();\r\n        return resolve('iteration is completed')\r\n      }).catch(error => {\r\n        return reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  getStorage() {\r\n    return this.storageCache;\r\n  }\r\n\r\n\r\n  setValue(key, value) {\r\n    if (window['cordova']) {\r\n      this.initNgForage();\r\n    }\r\n    this.storageCache[key] = value;\r\n    return this.ngf.setItem(key, value).then(result => {\r\n      return result;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getValue(key): any | Promise<any> {\r\n    if (!this.storageCache[key]) {\r\n      return null;\r\n    } try {\r\n      const obj = this.storageCache[key]\r\n      return JSON.parse(obj);\r\n    } catch (error) {\r\n      return this.storageCache[key];\r\n    }\r\n  }\r\n\r\n  remove(key) {\r\n    delete this.storageCache[key];\r\n    if (window['cordova']) {\r\n      this.initNgForage();\r\n    }\r\n    this.ngf.removeItem(key).then(fulfilled => {\r\n      delete this.ngf[key];\r\n    }).catch(error => {\r\n      console.error('Could not remove', key);\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.storageCache = {};\r\n    this.ngf.clear();\r\n  }\r\n\r\n  private pluginCheck() {\r\n    if (window['cordova'] && window['NativeStorage']) {\r\n      this.nativeStorageI = window['NativeStorage'];\r\n      // return true;\r\n    }\r\n    // this.initStorage();\r\n  }\r\n\r\n  private getItemNs(key) {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova'] && window['NativeStorage']) {\r\n        this.nativeStorageI.getItem(key, result => {\r\n          resolve(result);\r\n        }, error => {\r\n          reject(error);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private setItemNs(key, value) {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova'] && window['NativeStorage']) {\r\n        this.nativeStorageI.setItem(key, value, result => {\r\n          resolve(result);\r\n        }, error => {\r\n          reject(error);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private removeItemNs(key) {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova'] && window['NativeStorage']) {\r\n        this.nativeStorageI.remove(key, (result) => {\r\n          resolve(result);\r\n        }, (error) => {\r\n          reject(error);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  private clearNs() {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova'] && window['NativeStorage']) {\r\n        this.nativeStorageI.clear(result => {\r\n          resolve(result);\r\n        }, error => {\r\n          reject(error);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private initNgForage() {\r\n    this.ngfConfig.configure({\r\n      name: 'MyApp',\r\n      driver: [\r\n        Driver.WEB_SQL,\r\n      ]\r\n    });\r\n\r\n  }\r\n\r\n  private promiseReflect(promise) {\r\n    return promise.then(resolved => { return { v: resolved, status: 'resolved' } }, error => { return { e: error, status: 'rejected' } })\r\n  }\r\n\r\n  clearLocalStorage() {\r\n    this.remove('userObj');\r\n    this.remove('accessToken');\r\n    this.remove('refreshToken');\r\n    this.remove('registrationId');\r\n  }\r\n\r\n  /**\r\n   * Due to timing issues and circular dependency checkDeviceId is moved from NSystemService\r\n  */\r\n\r\n  checkDeviceId() {\r\n    if (NSystemService.getInstance().checkDevice() === 'browser') {\r\n      this._deviceUUID = this.getValue('uuid');\r\n\r\n      if (!this._deviceUUID) {\r\n        this._deviceUUID = new NUtility().generateUUID();\r\n        this.setValue('uuid', this._deviceUUID);\r\n      }\r\n    } else {\r\n      window['plugins'].uniqueDeviceID.get((uuid) => {\r\n        this._deviceUUID = uuid;\r\n        this.setValue('uuid', this._deviceUUID);\r\n      });\r\n    }\r\n    return this._deviceUUID;\r\n  }\r\n\r\n  public get deviceUUID() {\r\n    return this._deviceUUID;\r\n  }\r\n}\r\n","import { NSessionStorageService } from './n-sessionStorage.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NTokenService {\r\n\r\n  nSessionStorage;\r\n  // nLocalStorageService: NLocalStorageService;\r\n\r\n  constructor(private nLocalStorageService: NLocalStorageService) {\r\n    this.nSessionStorage = new NSessionStorageService();\r\n    // this.nLocalStorageService = new NLocalStorageService();\r\n  }\r\n\r\n  updateTokens(tokensObj, isRemember?: Boolean) {\r\n    let userObj = this.decodeToken(tokensObj['accessToken'])\r\n    this.nSessionStorage.setValue('accessToken', tokensObj['accessToken']);\r\n    this.nSessionStorage.setValue('refreshToken', tokensObj['refreshToken']);\r\n    this.nSessionStorage.setValue('userObj', JSON.stringify(userObj));\r\n\r\n    if ((isRemember || this.nLocalStorageService.getValue('accessToken'))) {\r\n      this.nLocalStorageService.setValue('accessToken', tokensObj['accessToken']);\r\n      this.nLocalStorageService.setValue('refreshToken', tokensObj['refreshToken']);\r\n      this.nLocalStorageService.setValue('userObj', JSON.stringify(userObj));\r\n    }\r\n  }\r\n\r\n  updateSessionStorage() {\r\n    this.updateTokens(this.nLocalStorageService.getStorage(), true);\r\n  }\r\n\r\n  public urlBase64Decode(str: string): string {\r\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    switch (output.length % 4) {\r\n      case 0: { break; }\r\n      case 2: { output += '=='; break; }\r\n      case 3: { output += '='; break; }\r\n      default: {\r\n        throw 'Illegal base64url string!';\r\n      }\r\n    }\r\n    return this.b64DecodeUnicode(output);\r\n  }\r\n\r\n  // credits for decoder goes to https://github.com/atk\r\n  private b64decode(str: string): string {\r\n    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n    let output: string = '';\r\n\r\n    str = String(str).replace(/=+$/, '');\r\n\r\n    if (str.length % 4 == 1) {\r\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\r\n    }\r\n\r\n    for (\r\n      // initialize result and counters\r\n      let bc: number = 0, bs: any, buffer: any, idx: number = 0;\r\n      // get next character\r\n      buffer = str.charAt(idx++);\r\n      // character found in table? initialize bit storage and add its ascii value;\r\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\r\n        // and if not first of each 4 characters,\r\n        // convert the first 8 bits to one ascii character\r\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\r\n    ) {\r\n      // try to find character in table (0-63, not found => -1)\r\n      buffer = chars.indexOf(buffer);\r\n    }\r\n    return output;\r\n  }\r\n\r\n  // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\r\n  private b64DecodeUnicode(str: any) {\r\n    return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), (c: any) => {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n  }\r\n\r\n  public decodeToken(token: string): any {\r\n    let parts = token.split('.');\r\n\r\n    if (parts.length !== 3) {\r\n      throw new Error('JWT must have 3 parts');\r\n    }\r\n\r\n    let decoded = this.urlBase64Decode(parts[1]);\r\n    if (!decoded) {\r\n      throw new Error('Cannot decode the token');\r\n    }\r\n\r\n    return JSON.parse(decoded);\r\n  }\r\n\r\n  public getTokenExpirationDate(token: string): Date {\r\n    let decoded: any;\r\n    decoded = this.decodeToken(token);\r\n\r\n    if (!decoded.hasOwnProperty('exp')) {\r\n      return null;\r\n    }\r\n\r\n    let date = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n    date.setUTCSeconds(decoded.exp);\r\n\r\n    return date;\r\n  }\r\n\r\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n    let date = this.getTokenExpirationDate(token);\r\n    offsetSeconds = offsetSeconds || 0;\r\n\r\n    if (date == null) {\r\n      return false;\r\n    }\r\n\r\n    // Token expired?\r\n    return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable, Subscription } from 'rxjs';\r\n\r\nconst ServiceName: string = \"PubSub Service\";\r\n\r\n@Injectable()\r\nexport class NPubSubService {\r\n  private events = {};\r\n\r\n  constructor() { }\r\n\r\n  public $sub(event: string): Observable<any>;\r\n  public $sub(event: string, callback: (value: any) => void): Subscription;\r\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\r\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\r\n  public $sub(event: string, callback?: (value: any) => void, error?: (error: any) => void, complete?: () => void) {\r\n      if (!event) {\r\n          throw new Error(`[${ServiceName}] => Subscription method must get event name.`);\r\n      }\r\n\r\n      if (this.events[event] === undefined) {\r\n          this.events[event] = new Subject<any>();\r\n      }\r\n\r\n      if (typeof callback !== 'function') {\r\n          return this.events[event].asObservable();\r\n      } else {\r\n          return this.events[event].asObservable().subscribe(callback, error, complete);\r\n      }\r\n  }\r\n\r\n  public $pub(event: string, eventObject?: any) {\r\n      if (!event) {\r\n          throw new Error(`[${ServiceName}] => Publish method must get event name.`);\r\n      } else if (!this.events[event]) {\r\n          return;\r\n      }\r\n      this.events[event].next(eventObject);\r\n  }\r\n}\r\n\r\nexport interface IPubSubService {\r\n  $pub(event: string, eventObject?: any);\r\n  $sub(event: string): Observable<any>;\r\n  $sub(event: string, callback: (value: any) => void): Subscription;\r\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\r\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\r\n}\r\n\r\ninterface I$sub {\r\n  (event: string): Observable<any>;\r\n  (event: string, callback: (value: any) => void): Subscription;\r\n  (event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\r\n  (event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NSessionStorageService } from './n-sessionStorage.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\n\r\n@Injectable()\r\nexport class NLogoutService {\r\n\r\n  nSessionStorage = new NSessionStorageService();\r\n  // nLocalStorageService = new NLocalStorageService();\r\n  constructor(private nLocalStorageService: NLocalStorageService) { }\r\n\r\n  logout() {\r\n    this.nSessionStorage.clearSessionStorage();\r\n    this.nLocalStorageService.clearLocalStorage();\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject ,  Observable } from 'rxjs';\r\n// import { NSnackbarService } from './n-snackbar.service';\r\nimport { NLogoutService } from './n-logout.service';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\n// import { NSnackbarService } from './snackbar/service/snackbar.service';\r\n\r\n@Injectable()\r\nexport class NHTTPLoaderService {\r\n  public pendingRequests = 0;\r\n  public showLoading = false;\r\n  private _isHTTPRequestInProgress = new Subject<boolean>();\r\n  _isHTTPRequestInProgress$ = this._isHTTPRequestInProgress.asObservable();\r\n\r\n  constructor(private nLogoutService: NLogoutService, private nPubSubService: NPubSubService) {\r\n\r\n  }\r\n\r\n  isHTTPRequestInProgress(bool) {\r\n    if (bool) {\r\n      this.pendingRequests++;\r\n      if (!this.showLoading) {\r\n        this._isHTTPRequestInProgress.next(bool);\r\n      }\r\n      this.showLoading = true;\r\n    } else {\r\n      this.pendingRequests--;\r\n      if (this.pendingRequests <= 0) {\r\n        if (this.showLoading) {\r\n          this._isHTTPRequestInProgress.next(bool);\r\n        }\r\n        this.showLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  alertError(error) {\r\n    if (error.status < 200 || error.status > 500) {\r\n      if (error.status === 0) {\r\n        this.nPubSubService.$pub('openSnackBar', 'Connectivity issue');\r\n      } else {\r\n        this.nPubSubService.$pub('openSnackBar', 'Response failure')\r\n      }\r\n    } else if (error.status === 401) {\r\n      this.nLogoutService.logout();\r\n      if (error.error) {\r\n        this.nPubSubService.$pub('openSnackBar', error.error)\r\n      } else {\r\n        this.nPubSubService.$pub('openSnackBar', error)\r\n      }\r\n    } else if (error.error) {\r\n      if (error.error instanceof Object) {\r\n        this.nPubSubService.$pub('openSnackBar', error.error.message)\r\n      } else {\r\n        this.nPubSubService.$pub('openSnackBar', error.error)\r\n      }\r\n    } else {\r\n      this.nPubSubService.$pub('openSnackBar', 'Response failure')\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Injectable, OnInit, OnDestroy } from '@angular/core';\r\nimport { NSystemService } from './n-system.service';\r\nimport { Observable } from 'rxjs';\r\ndeclare var PushNotification: any;\r\ndeclare var APNSPushNotification: any;\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport * as firebase from 'firebase';\r\nimport { NPubSubService } from './n-pubSub.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NSessionStorageService } from './n-sessionStorage.service';\r\n// import { Router } from '@angular/router';\r\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\r\nimport { environment } from '../../environments/environment.prod';\r\n\r\n\r\n@Injectable()\r\nexport class NNotificationService {\r\n  // private static instance: NNotificationService;\r\n  private systemService: NSystemService = NSystemService.getInstance();\r\n  private firebaseSenderId: string;\r\n  private isNotificationEnabled: boolean;\r\n  private deviceType; string;\r\n  private resDetails;\r\n  private deviceUUID: string;\r\n  private possiblePushTypes: string[] = ['APNS','FCM'];\r\n  loginSubscribe;\r\n  sessionStorage: NSessionStorageService;\r\n  appName;\r\n  constructor(private localStorageService: NLocalStorageService, private pubSubService: NPubSubService,\r\n    private http: HttpClient, private bHttpLoader: NHTTPLoaderService) {\r\n    this.firebaseSenderId = this.systemService.getVal('firebaseSenderId');\r\n    this.isNotificationEnabled = this.systemService.getVal('isNotificationEnabled');\r\n    this.appName = this.systemService.getVal('appName');\r\n    this.deviceType = this.systemService.deviceType;\r\n    this.sessionStorage = new NSessionStorageService();\r\n    this.loginSubscribe = this.pubSubService.$sub('firebaseRegister', () => {\r\n      this.enableNotification();\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  enableNotification() {\r\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\r\n    document.addEventListener('deviceready', event => {\r\n      if (this.isNotificationEnabled) {\r\n        if (this.deviceType && this.deviceType != 'browser') {\r\n          this.deviceType = this.systemService.deviceType;\r\n          this.checkPermission(pushType).then(res => {\r\n            if (res) {\r\n              this.initializeNotifications(pushType);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    if (this.isNotificationEnabled && pushType !== 'APNS') {\r\n      if (this.deviceType && this.deviceType == 'browser' && window['Notification']) {\r\n        this.initialiseWebPush();\r\n      }\r\n    }\r\n  }\r\n\r\n  initialiseWebPush() {\r\n    const __this = this;\r\n    const messaging = firebase.messaging();\r\n\r\n    Notification.requestPermission()\r\n      .then(function () {\r\n        return messaging.getToken();\r\n      })\r\n      .then(function (token) {\r\n        if (token) {\r\n          __this.sendRegDetails(token);\r\n        }\r\n      })\r\n      .catch(function (err) {\r\n        __this.bHttpLoader.alertError(err);\r\n      });\r\n\r\n    messaging.onMessage(function (payload) {\r\n      if (payload['notification']) {\r\n        let notificationObj = payload['notification'];\r\n        let options = {\r\n          body: notificationObj.body,\r\n          icon: notificationObj.icon\r\n        }\r\n        // creating a native browser message\r\n        let notificationUI = new Notification(notificationObj.title, options);\r\n        notificationUI.onclick = function () {\r\n          window.focus(); // window is focused when the user clicks the notification using this\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  checkPermission(pushType?) {\r\n    // Android & iOS only\r\n    // Checks whether the push notification permission has been granted.\r\n    return new Promise((resolve) => {\r\n      pushType = this.getPushType(pushType);\r\n      if ((this.deviceType === 'Android' || this.deviceType === 'iOS') && (pushType === 'FCM' )) {\r\n        PushNotification.hasPermission(function (data) {\r\n          return resolve(data.isEnabled);\r\n        });\r\n      } else if (this.deviceType === 'iOS' && pushType === 'APNS') {\r\n         APNSPushNotification.hasPermission(function (data) {\r\n          return resolve(data.isEnabled);\r\n        });\r\n      } else {\r\n        return resolve(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  initializeNotifications(pushType?) {\r\n    //pushType = pushType ? pushType : 'FCM';\r\n    pushType = this.getPushType(pushType);\r\n\r\n    let push;\r\n    // Default if for FCM\r\n    if (pushType === 'FCM') {\r\n      push = window['PushNotification'].init({\r\n        android: {\r\n          senderID: this.firebaseSenderId\r\n        },\r\n        ios: {\r\n          alert: \"true\",\r\n          badge: \"true\",\r\n          sound: \"true\",\r\n          senderID: this.firebaseSenderId\r\n        },\r\n      });\r\n    }\r\n    // New APNS plugin init\r\n    else if (pushType === 'APNS') {\r\n      push = window['APNSPushNotification'].init({\r\n        ios: {\r\n          alert: \"true\",\r\n          badge: \"true\",\r\n          sound: \"true\"\r\n        }\r\n      });\r\n    }\r\n    push.on('registration', (data) => {\r\n      // data.registrationId\r\n      this.sendRegDetails(data.registrationId);\r\n    });\r\n\r\n    // ToDo Christy get call back function from app user to change what happens once a notification arrives\r\n    push.on('notification', (data) => {\r\n      window['cordova'].plugins.notification.local.schedule({\r\n        title: data.title,\r\n        text: data.message,\r\n        sound: data.sound,\r\n        at: new Date().getTime()\r\n      });\r\n    });\r\n\r\n    push.on('error', (e) => {\r\n      // e.message\r\n      console.error(e);\r\n    });\r\n  }\r\n\r\n  sendRegDetails(registrationId) {\r\n    this.localStorageService.setValue('registrationId', registrationId);\r\n    var url = this.systemService.getTenantUrl() + 'notification/' + this.systemService.getVal('appName') + '/register';\r\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\r\n    this.http.post(url, {\r\n      'key': this.sessionStorage.getValue('userObj')['userKey'],\r\n      'uuid': this.localStorageService.getValue('uuid'), \r\n      'fbregid': registrationId,\r\n      'pushType': pushType\r\n    }).subscribe(result => {\r\n      // this.pubSubService.$pub('FBRegComp');\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  getPushType (currPushType) {\r\n    let isValidPush = typeof currPushType !== 'undefined' && this.possiblePushTypes.includes(currPushType.toUpperCase());\r\n    let pushType = isValidPush ? currPushType.toUpperCase() : 'FCM';\r\n    return pushType;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loginSubscribe.unSubscribe();\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Injectable, EventEmitter, Output, Injector } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NTokenService } from './n-token.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\nimport { NSessionStorageService } from './n-sessionStorage.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { NNotificationService } from './n-notification.service';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class NLoginService {\r\n  loginUrl;\r\n  appProperties;\r\n  systemService;\r\n  nSessionStorage;\r\n  uuid;\r\n  details: any;\r\n\r\n  @Output() loginCompleted = new EventEmitter();\r\n  constructor(private http: HttpClient, private pubSubService: NPubSubService, private notificationService: NNotificationService,\r\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\r\n    this.systemService = NSystemService.getInstance();\r\n    // this.nTokenService = new NTokenService();\r\n    this.nSessionStorage = new NSessionStorageService();\r\n    // this.nLocalStorageService = new NLocalStorageService();\r\n  }\r\n\r\n\r\n  login(userName, password, isRemember?) {\r\n    this.appProperties = this.systemService.getVal('properties');\r\n    this.loginUrl = this.systemService.getAuthUrl() + this.appProperties.appName;\r\n    this.uuid = this.nLocalStorageService.getValue('uuid');\r\n    if (!this.uuid) {\r\n      this.uuid = this.nLocalStorageService.checkDeviceId();\r\n    }\r\n    this.details = {\r\n      username: userName,\r\n      password: password,\r\n    };\r\n    this.details.platformDetails = this.systemService.getPlatformDetails(this.systemService.checkDevice());\r\n    this.details.platformDetails['uuid'] = this.uuid;\r\n    return this.http.post(this.loginUrl, JSON.stringify(this.details)).pipe(map(result => {\r\n      const tokensObj = result;\r\n      if (tokensObj) {\r\n        this.nTokenService.updateTokens(tokensObj, isRemember);\r\n      }\r\n      // TODO chris array of supported pushes currently only support APNS and Firebase\r\n      if ((this.systemService.getVal('firebaseSenderId') != 'FIREBASE_SENDER_ID' && this.systemService.getVal('firebaseAuthKey') != 'FIREBASE_AUTH_KEY') \r\n           || (this.systemService.getVal('pushType') === 'APNS' && this.systemService.isIOS())) {\r\n        this.pubSubService.$pub('firebaseRegister');\r\n      }\r\n      this.pubSubService.$pub('loginComplete');\r\n      return (result);\r\n    }, error => {\r\n      return (error);\r\n    }));\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.nLocalStorageService.initStorage().then(result => {\r\n      if (this.nSessionStorage.getValue('accessToken') && this.nSessionStorage.getValue('refreshToken') &&\r\n        this.nSessionStorage.getValue('accessToken') != 'null' && this.nSessionStorage.getValue('refreshToken') != 'null') {\r\n        return true;\r\n      }\r\n      return false;\r\n    }).catch(error => {\r\n      return false;\r\n    });\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { NLoginService } from './n-login.service';\r\n\r\n@Injectable()\r\nexport class NAuthGuardService implements CanActivate {\r\n\r\n  constructor(private nLoginService: NLoginService, private router: Router) { }\r\n\r\n  canActivate() {\r\n    return this.nLoginService.isLoggedIn().then(result => {\r\n      if (result) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['unauthorized']);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { NSystemService } from './n-system.service';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class NDataModelService {\r\n  private systemService: NSystemService;\r\n  private dmUrl: string;\r\n  private invalidDataModelName: string = 'Invalid data model name.';\r\n  private invalidDataModelId: string = 'Invalid data model id.';\r\n  private invalidDataModelObj: string = 'Invalid data model object.';\r\n  private dmDs;\r\n  constructor(private http: HttpClient) {\r\n    this.systemService = NSystemService.getInstance();\r\n  }\r\n\r\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\r\n  /**\r\n   *\r\n   * @param dataModelName\r\n   * @param filter The filter query parameter allows to specify conditions on the documents to return.\r\n   * The filter qparam value is any mongodb query… Defaults to {}\r\n   * @param keys Projections to be applited on mongo db.\r\n   * @param sort sort to be applied on the query results. Defaults to {}\r\n   * @param pagenumber Page number for paginated queries. Defaults to 1\r\n   * @param pagesize Size of each page to be returned. Defaults to 100.\r\n   */\r\n  get(dataModelName, filter?, keys?, sort?, pagenumber?, pagesize?): Observable<any> {\r\n    if (dataModelName) {\r\n      // let modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\r\n      let modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\r\n      if (this.checkIfValid(filter) || this.checkIfValid(keys) || this.checkIfValid(sort) ||\r\n        this.checkIfValid(pagenumber) || this.checkIfValid(pagesize)) {\r\n        let queryString = `${this.toQueryString({\r\n          'filter': filter,\r\n          'keys': keys,\r\n          'sort': sort,\r\n          'pagenumber': pagenumber,\r\n          'pagesize': pagesize\r\n        })}`;\r\n        if (queryString === '') {\r\n          queryString += '?filter={}';\r\n        } else {\r\n          queryString = '?'.concat(queryString);\r\n        }\r\n        modelNameUrl += queryString;\r\n      }\r\n      return this.http.get(modelNameUrl).pipe(map((value, index) => {\r\n        return value;\r\n      }), catchError(error => {\r\n        return throwError(error);\r\n      }));\r\n    } else {\r\n      return throwError(new Error(`Could not get ${dataModelName}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // PUT /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name of the app\r\n   * @param dataModelObj Data Model object which is to be inserted\r\n   */\r\n  put(dataModelName, dataModelObj): Observable<any> {\r\n    if (dataModelName) {\r\n      if (dataModelObj) {\r\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\r\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\r\n        return this.http.put(modelNameUrl, dataModelObj).pipe(map((value, index) => {\r\n          return value;\r\n        }), catchError(error => {\r\n          return throwError(error);\r\n        }));\r\n      } else {\r\n        return throwError(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelObj}`));\r\n      }\r\n    } else {\r\n      return throwError(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\r\n  /**\r\n   *\r\n   * @param dataModelName\r\n   * @param filter\r\n   */\r\n  delete(dataModelName, filter): Observable<any> {\r\n    let modelNameUrl;\r\n    if (dataModelName) {\r\n      // modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\r\n      modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\r\n\r\n      if (this.checkIfValid(filter) && filter != '') {\r\n        modelNameUrl += `?filter=${filter}`;\r\n      } else {\r\n        modelNameUrl += '?filter={}';\r\n      }\r\n      return this.http.delete(modelNameUrl).pipe(map((value, index) => {\r\n        return value;\r\n      }), catchError(error => {\r\n        return throwError(error);\r\n      }));\r\n    } else {\r\n      return throwError(new Error(`Could not delete ${dataModelName}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name which is to be updated\r\n   * @param dataModelObj New data model object\r\n   */\r\n  update(dataModelName, updateObject): Observable<any> {\r\n    if (dataModelName && updateObject) {\r\n      // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\r\n      const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\r\n      return this.http.patch(modelNameUrl, updateObject).pipe(map((value, index) => {\r\n        return value;\r\n      }), catchError(error => {\r\n        return throwError(error);\r\n      }));\r\n    } else {\r\n      return throwError(new Error(`Could not update ${dataModelName}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name which is to be updated\r\n   * @param dataModelId Data model id which is to be updated\r\n   */\r\n  getById(dataModelName, dataModelId): Observable<any> {\r\n    if (dataModelName) {\r\n      if (dataModelId) {\r\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\r\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\r\n        return this.http.get(modelNameUrl).pipe(map((value, index) => {\r\n          return value;\r\n        }), catchError(error => {\r\n          return throwError(error);\r\n        }));\r\n      } else {\r\n       throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\r\n      }\r\n    } else {\r\n      throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name which is to be deleted\r\n   * @param dataModelId Data model id which is to be deleted\r\n   */\r\n  deleteById(dataModelName, dataModelId) {\r\n    if (dataModelName) {\r\n      if (dataModelId) {\r\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\r\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\r\n        return this.http.delete(modelNameUrl).pipe(map((value, index) => {\r\n          return value;\r\n        }), catchError(error => {\r\n          return throwError(error);\r\n        }));\r\n      } else {\r\n      throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\r\n      }\r\n    } else {\r\n      return throwError(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  //PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name which is to be update\r\n   * @param dataModelId Data model id which is to be updated\r\n   * @param dataModelObj Data Model object which is to be inserted\r\n   */\r\n  updateById(dataModelName, dataModelId, dataModelObj) {\r\n    if (dataModelName) {\r\n      if (dataModelId) {\r\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\r\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\r\n        var dmObj = Object.assign({}, dataModelObj);\r\n        delete dmObj['_id'];\r\n        return this.http.patch(modelNameUrl, dmObj).pipe(map((value, index) => {\r\n          return value;\r\n        }), catchError(error => {\r\n          return throwError(error);\r\n        }));\r\n      } else {\r\n        throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\r\n      }\r\n    } else {\r\n      return throwError(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  private toQueryString(obj) {\r\n    const parts = [];\r\n    for (const i in obj) {\r\n      if (obj.hasOwnProperty(i) && this.checkIfValid(obj[i])) {\r\n        parts.push((i) + '=' + JSON.stringify(obj[i]));\r\n      }\r\n    }\r\n    return parts.join('&');\r\n  }\r\n\r\n  private checkIfValid(value: any) {\r\n    if (value === undefined || value == null) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  private getDataSourceURL(dataModelName) {\r\n    if (!this.dmDs) {\r\n      this.dmDs = window['neutrinos']['dataSource'];\r\n    }\r\n    const dsDm = this.dmDs[dataModelName];\r\n    const properties = this.systemService.properties;\r\n    if (dsDm) {\r\n      return properties.baseUrl + properties.tenantName + '/datamodel/' + dsDm + '/' + properties.appName + '/';\r\n    } else {\r\n      return this.systemService.getDataModelUrl();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpHeaders,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n  HttpClient\r\n} from '@angular/common/http';\r\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\r\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NSessionStorageService } from './n-sessionStorage.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { NTokenService } from './n-token.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\nimport { timeout, catchError, finalize, switchMap, filter, take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class NHttpService {\r\n  timeout = 90000;\r\n  systemService;\r\n  nSessionStorage;\r\n  appProperties;\r\n  isRefreshingToken = false;\r\n  nPubSubService;\r\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n  constructor(private nHTTPLoader: NHTTPLoaderService, private inj: Injector,\r\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\r\n    this.systemService = NSystemService.getInstance();\r\n    this.nSessionStorage = new NSessionStorageService();\r\n    this.appProperties = this.systemService.getVal('properties');\r\n    this.nPubSubService = new NPubSubService();\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.requestInterceptor();\r\n\r\n    // Pass on the cloned request instead of the original request.\r\n    return next.handle(this.requestOptions(req))\r\n      .pipe(timeout(this.timeout)\r\n        , catchError(error => this.onCatch(error, req, next))\r\n        , finalize(() => {\r\n          this.onFinally();\r\n        }));\r\n  }\r\n\r\n  updateToken(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): any {\r\n    if (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\r\n      this.appProperties.appAuthenticationStrategy === 'localAuth') {\r\n      if (!this.isRefreshingToken) {\r\n        this.isRefreshingToken = true;\r\n\r\n        // Reset here so that the following requests wait until the token\r\n        // comes back from the refreshToken call.\r\n        this.tokenSubject.next(null);\r\n\r\n        return this.refreshToken()\r\n          .pipe(\r\n            switchMap((tokensObj: Object) => {\r\n              if (tokensObj) {\r\n                this.nTokenService.updateTokens(tokensObj);\r\n                const newToken = tokensObj['accessToken'];\r\n                this.tokenSubject.next(newToken);\r\n                return next.handle(this.requestOptions(req));\r\n              }\r\n              return throwError(new Error('Can\\'t refresh the token'));\r\n            }),\r\n            catchError(err => this.onCatchError(err)),\r\n            finalize(() => this.isRefreshingToken = false)\r\n          );\r\n      } else {\r\n        return this.tokenSubject.pipe(\r\n          filter(token => token != null),\r\n          take(1),\r\n          switchMap(token => next.handle(this.requestOptions(req)))\r\n        );\r\n      }\r\n    } else {\r\n      return this.onCatchError(error);\r\n    }\r\n  }\r\n\r\n  refreshToken() {\r\n    const http = this.inj.get(HttpClient);\r\n    const appProperties = this.systemService.getVal('properties');\r\n    const refreshUrl = this.systemService.getAuthUrl() + appProperties.appName + '/refresh';\r\n    const body = {\r\n      'platformDetails': this.systemService.getPlatformDetails(this.systemService.checkDevice()),\r\n      'userKey': this.nSessionStorage.getValue('userObj')['userKey'],\r\n      'refreshToken': this.nSessionStorage.getValue('refreshToken')\r\n    };\r\n    body.platformDetails['uuid'] = this.nLocalStorageService.getValue('uuid');\r\n    return http.post(refreshUrl, body);\r\n  }\r\n\r\n\r\n  /**\r\n   * Request options.\r\n   * @param options\r\n   * @returns HttpRequest\r\n   */\r\n  private requestOptions(req?: HttpRequest<any>) {\r\n    let headers = req.headers;\r\n    if (req.headers == null) {\r\n      headers = new HttpHeaders();\r\n    }\r\n    req = req.clone({\r\n      url: this.getFullUrl(req.url),\r\n      headers: headers\r\n    });\r\n    const baseUrl = NSystemService.getInstance().getVal('baseUrl');\r\n    const isArt = (baseUrl !== '' && req.url.includes(baseUrl));\r\n    return isArt ? this.addDefaultHeaders(req) : req;\r\n  }\r\n\r\n\r\n  /**\r\n  * Default options.\r\n  * @param options\r\n  * @returns HttpHeadedrs\r\n  */\r\n  private addDefaultHeaders(req: any) {\r\n    /**\r\n     * TODO: Add all default Headers over here\r\n     */\r\n    if (!req.headers.has('Access-Control-Allow-Origin')) {\r\n      req.headers = req.headers.set('Access-Control-Allow-Origin', '*');\r\n    }\r\n\r\n    if (!req.headers.has('Content-Type')) {\r\n      req.headers = req.headers.set('Content-Type', 'application/json');\r\n    } else if (req.headers.has('Content-Type') && (req.headers.get('Content-Type') === 'no-content')) {\r\n      req.headers = req.headers.delete('Content-Type');\r\n    }\r\n\r\n    if (!req.headers.has('Accept')) {\r\n      req.headers = req.headers.set('Accept', 'application/json');\r\n    }\r\n\r\n    if (!req.headers.has('Authorization')) {\r\n      this.appProperties = this.systemService.getVal('properties');\r\n      if (this.appProperties && this.appProperties.appAuthenticationStrategy === 'basicAuth') {\r\n        let username, password;\r\n        if (this.appProperties.basicAuthUser && this.appProperties.basicAuthPassword) {\r\n          username = this.appProperties.basicAuthUser;\r\n          password = this.appProperties.basicAuthPassword;\r\n        } else {\r\n          username = \"bhive-art-proxyuser\";\r\n          password = \"password\";\r\n          console.warn(\"Authentication strategy: Basic Auth. basicAuthUser and basicAuthPassword are not configured in environment. Setting default values.\");\r\n        }\r\n        req.headers = req.headers.set('Authorization', 'Basic ' + btoa(username + \":\" + password));\r\n      } else if (this.appProperties && (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\r\n        this.appProperties.appAuthenticationStrategy === 'localAuth')) {\r\n        if (this.nSessionStorage.getValue('accessToken')) {\r\n          req.headers = req.headers.set('Authorization', 'Bearer ' + this.nSessionStorage.getValue('accessToken'));\r\n        }\r\n      }\r\n    }\r\n    return req;\r\n  }\r\n\r\n  /**\r\n   * Build API url.\r\n   * @param url\r\n   * @returns string\r\n   */\r\n  private getFullUrl(url: string): string {\r\n    // return full URL to API here\r\n    return url;\r\n  }\r\n\r\n  /**\r\n   * Request interceptor.\r\n   */\r\n  private requestInterceptor(): void {\r\n    this.nHTTPLoader.isHTTPRequestInProgress(true);\r\n  }\r\n\r\n  /**\r\n   * Response interceptor.\r\n   */\r\n  private responseInterceptor(): void {\r\n    this.nHTTPLoader.isHTTPRequestInProgress(false);\r\n  }\r\n\r\n  /**\r\n    * Error handler.\r\n    * @param error\r\n    * @param caught\r\n    * @returns ErrorObservable\r\n    */\r\n  private onCatch(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\r\n    if (error instanceof HttpErrorResponse) {\r\n      if ((<HttpErrorResponse>error).status === 403 && (<HttpErrorResponse>error).error.message === 'jwt expired') {\r\n        return this.updateToken(error, req, next);\r\n      } else {\r\n        return this.onSubscribeError(error);\r\n      }\r\n    } else {\r\n      return this.onSubscribeError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onSubscribeError\r\n   * @param error\r\n   */\r\n  private onSubscribeError(err: HttpErrorResponse): Observable<any> {\r\n    this.nHTTPLoader.alertError(err);\r\n    return this.onCatchError(err);\r\n  }\r\n  /**\r\n   * onFinally\r\n   */\r\n  private onFinally(): void {\r\n    this.responseInterceptor();\r\n  }\r\n\r\n  private onCatchError(error: HttpErrorResponse): Observable<any> {\r\n    return throwError(error);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n// import { MatSnackBar } from '@angular/material';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\n\r\n\r\n@Injectable()\r\nexport class NSnackbarService {\r\n  snackBarListner;\r\n  private snackService = new Subject<any>();\r\n  constructor(private nPubSubService: NPubSubService) {\r\n    if (NSystemService.getInstance().getVal('useDefaultExceptionUI')) {\r\n      this.snackBarListner = this.nPubSubService.$sub('openSnackBar', (msg) => {\r\n        this.openSnackBar(msg);\r\n      })\r\n    }\r\n  }\r\n\r\n  get() {\r\n    return this.snackService.asObservable();\r\n  }\r\n\r\n\r\n\r\n  add(data: {\r\n    msg: string, timeout?: number, background?: string, color?: string, customClass?: any,\r\n    action?: { text: string, onClick?: Function, color?: string }, onAdd?: Function, onRemove?: Function\r\n  }) {\r\n    this.snackService.next({\r\n      action: 'add',\r\n      data: data\r\n    });\r\n  }\r\n\r\n  remove(id: string) {\r\n    this.snackService.next({ action: 'remove', id: id });\r\n  }\r\n\r\n  clear() {\r\n    this.snackService.next({ action: 'clear' });\r\n  }\r\n\r\n  openSnackBar(message, timeout?, ) {\r\n    this.add({\r\n      msg: message,\r\n      timeout: timeout || 5000,\r\n      action: {\r\n        text: 'Close',\r\n        onClick: (snack) => {\r\n        },\r\n      },\r\n      onAdd: (snack) => {\r\n      },\r\n      onRemove: (snack) => {\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'n-snack',\r\n  template: `\r\n     <div class=\"snack\" [ngStyle]=\"{background: background ? background : '#323232' , color: color ? color : '#fff'}\" [ngClass]=\" ['snackbar-layout', 'customClass' ]\">\r\n          <ng-content></ng-content>\r\n       </div> \r\n  `,\r\n  styleUrls: ['../snackbar/snackbar.style.css']\r\n})\r\nexport class SnackComponent {\r\n  @Input() background;\r\n  @Input() color;\r\n  @Input() customClass;\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NSnackbarService } from '../../n-snackbar.service';\r\n\r\n@Component({\r\n  selector: 'n-snackbar',\r\n  template: `\r\n      <div class=\"snackbars\" [ngClass]=\"position || 'bottom-center'\">\r\n          <n-snack   *ngFor=\"let snackbar of snacks\" [background]=\"snackbar.background || background\"\r\n                        [customClass]=\"snackbar.customClass || customClass\"\r\n                        [color]=\"snackbar.color || color || calcTextColor(snackbar.background || background)\">\r\n              <div class=\"container\">\r\n              <div class=\"snack-text child\" >\r\n                  {{snackbar.msg}}\r\n              </div>\r\n              <div *ngIf=\"snackbar.action.text\" class=\"snack-action\" (click)=\"snackbar.action.onClick()\"\r\n                   [ngStyle]=\"{color: snackbar.action.color || accent}\">\r\n                  {{snackbar.action.text}}\r\n              </div>\r\n              </div>\r\n          </n-snack>\r\n      </div>\r\n  `,\r\n  styleUrls: ['./snackbar.style.css']\r\n})\r\nexport class SnackbarComponent {\r\n  @Input() position: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\r\n  @Input() max: number = 1;\r\n  @Input() background: string;\r\n  @Input() accent: string;\r\n  @Input() color: string;\r\n  @Input() customClass: any;\r\n  @Input() timeout: number;\r\n\r\n  @Output() public onAdd: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public onRemove: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public onClear: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  snacks: Array<{\r\n    id: string, msg: string, timeout?: number, color?: string, background?: string, customClass?: any, action?: {\r\n      text: string, onClick?: Function, color?: string\r\n    }, onAdd?: Function, onRemove?: Function, timeoutObj?: any\r\n  }> = [];\r\n\r\n  constructor(private snackbarService: NSnackbarService) {\r\n    this.snackbarService.get()\r\n      .subscribe(snack => {\r\n        if (snack.action === 'add') {\r\n          this.add(snack.data);\r\n        } else if (snack.action === 'remove') {\r\n          this.remove(snack.id);\r\n        } else if (snack.action === 'clear') {\r\n          this.clear();\r\n        }\r\n      });\r\n  }\r\n\r\n  add(snack) {\r\n    let timeout;\r\n    const id = this.uuid();\r\n\r\n    if (this.max && this.max > 0 && this.snacks.length === this.max) {\r\n      this.remove(this.snacks[0].id);\r\n    }\r\n\r\n    if (snack.timeout || this.timeout) {\r\n      timeout = setTimeout(() => {\r\n        this.remove(id);\r\n      }, snack.timeout || this.timeout)\r\n    }\r\n\r\n    const data = Object.assign({ id: id, timeoutObj: timeout }, snack);\r\n\r\n    if (snack.action) {\r\n      const that = this;\r\n      const fcn = snack.action.onClick || new Function();\r\n      snack.action.onClick = () => {\r\n        fcn(data);\r\n        that.remove(id);\r\n      };\r\n    }\r\n\r\n    if (snack.onAdd) {\r\n      snack.onAdd(data);\r\n    }\r\n\r\n    if (this.onAdd) {\r\n      this.onAdd.emit(data);\r\n    }\r\n\r\n    this.snacks.push(data);\r\n  }\r\n\r\n  remove(id) {\r\n    const snack = this.snacks.find(obj => obj.id === id);\r\n\r\n    if (snack) {\r\n      if (snack.onRemove) {\r\n        snack.onRemove(snack);\r\n      }\r\n\r\n      if (this.onRemove) {\r\n        this.onRemove.emit(snack);\r\n      }\r\n\r\n      if (snack.timeoutObj) {\r\n        clearTimeout(snack.timeoutObj);\r\n      }\r\n    }\r\n\r\n    this.snacks = this.snacks.filter(obj => obj.id !== id);\r\n  }\r\n\r\n  clear() {\r\n    // this.snacks.forEach(snack => {\r\n    //   this.remove(snack.id);\r\n    // });\r\n\r\n    this.snacks = [];\r\n\r\n    if (this.onClear) {\r\n      this.onClear.emit(true);\r\n    }\r\n  }\r\n\r\n  uuid() {\r\n    // tslint:disable:no-bitwise\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n    // tslint:enable:no-bitwise\r\n  }\r\n\r\n  calcTextColor(background) {\r\n    if (!background) {\r\n      return null;\r\n    }\r\n\r\n    function hexToRgb(hex) {\r\n      const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n      hex = hex.replace(shorthandRegex, (m, r, g, b) => {\r\n        return r + r + g + g + b + b;\r\n      });\r\n\r\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n      return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n      } : null;\r\n    }\r\n\r\n    const rgb = hexToRgb(background);\r\n    if (!rgb) {\r\n      return null;\r\n    }\r\n\r\n    const color = [rgb.r / 255, rgb.g / 255, rgb.b / 255];\r\n\r\n    for (let i = 0; i < color.length; ++i) {\r\n      if (color[i] <= 0.03928) {\r\n        color[i] = color[i] / 12.92;\r\n      } else {\r\n        color[i] = Math.pow((color[i] + 0.055) / 1.055, 2.4);\r\n      }\r\n    }\r\n\r\n    const l = 0.2126 * color[0] + 0.7152 * color[1] + 0.0722 * color[2];\r\n\r\n    if (l > 0.179) {\r\n      return '#000';\r\n    } else {\r\n      return '#fff';\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, APP_INITIALIZER } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NAuthGuardService } from './n-authGaurd.service';\r\nimport { NDataModelService } from './n-dataModel.service';\r\nimport { NHttpService } from './n-HTTP.service';\r\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { NLoginService } from './n-login.service';\r\nimport { NLogoutService } from './n-logout.service';\r\nimport { NNotificationService } from './n-notification.service';\r\nimport { NSnackbarService } from './n-snackbar.service';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\nimport { NSessionStorageService } from './n-sessionStorage.service'\r\nimport { NTokenService } from './n-token.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { InstanceFactory, NgForage, NgForageConfig } from 'ngforage';\r\n\r\nimport { SnackComponent } from './snackbar/snack/snack.component';\r\nimport { SnackbarComponent } from './snackbar/snackbar/snackbar.component';\r\n\r\n\r\nexport function startupServiceFactory(startupService: NLocalStorageService) {\r\n  const res = () => {\r\n    // console.log('module before initstorage call');\r\n    return startupService.initStorage();\r\n\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function NgForageFactory(ngForageConfig: NgForageConfig) {\r\n\t// @ts-ignore\r\n\treturn new NgForage({}, new InstanceFactory(ngForageConfig));\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: NHttpService,\r\n      multi: true\r\n    },\r\n    {\r\n      // Provider for APP_INITIALIZER\r\n      provide: APP_INITIALIZER,\r\n      useFactory: startupServiceFactory,\r\n      deps: [NLocalStorageService],\r\n      multi: true\r\n\t},\r\n\t{\r\n\t\tprovide: NgForage,\r\n\t\tuseFactory: NgForageFactory,\r\n\t\tdeps: [\r\n\t\t\tNgForageConfig\r\n\t\t]\r\n\t},\r\n    NAuthGuardService,\r\n    NDataModelService,\r\n    NHttpService,\r\n    NHTTPLoaderService,\r\n    NLocalStorageService,\r\n    NLoginService,\r\n    NLogoutService,\r\n    NNotificationService,\r\n    NSnackbarService,\r\n    NPubSubService,\r\n    NSessionStorageService,\r\n    NTokenService\r\n  ],\r\n  declarations: [\r\n    SnackComponent,\r\n    SnackbarComponent\r\n  ],\r\n  exports: [\r\n    SnackComponent,\r\n    SnackbarComponent\r\n  ]\r\n\r\n})\r\nexport class NeutrinosSeedServicesModule {\r\n\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["platform.os","platform.name","platform.version","messaging","firebase.messaging"],"mappings":"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"}