{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-system.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-sessionStorage.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-util.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-localStorage.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-token.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-pubSub.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-logout.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-HTTPLoader.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-notification.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-login.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-authGaurd.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-dataModel.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-HTTP.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/n-snackbar.service.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/snackbar/snack/snack.component.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/snackbar/snackbar/snackbar.component.ts","ng://neutrinos-seed-services/src/app/neutrinos-seed-services/neutrinos-seed-services.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","NSystemService","this","_deviceType","checkDevice","getInstance","instance","prototype","window","getVal","envProperties","properties","isAndroid","isIOS","getAndroidVersion","getAuthUrl","baseUrl","tenantName","getTenantUrl","getAppUrl","appName","getProxyUrl","getDataModelUrl","appDataSource","getFileIOUrl","getPlatformDetails","type","pDetails","platform","platform.os","family","platformVersion","version","assign","browser","platform.name","browserVersion","platform.version","model","manufacturer","isVirtual","NSessionStorageService","NSessionStorageService_1","sessionStorageCache","sessionStorage","getSessionStorage","setValue","value","setItem","getValue","obj","JSON","parse","error","remove","hasOwnProperty","removeItem","clearSessionStorage","clear","Injectable","NUtility","generateUUID","__s4","Math","floor","random","toString","substring","NLocalStorageService","ngfConfig","ngf","ngfCache","storageCache","initStorage","_this","Promise","resolve","reject","initNgForage","iterate","iteratonNumber","then","result","checkDeviceId","catch","getStorage","console","log","fulfilled","pluginCheck","nativeStorageI","getItemNs","getItem","setItemNs","removeItemNs","clearNs","configure","name","driver","Driver","WEB_SQL","promiseReflect","promise","resolved","v","status","e","clearLocalStorage","_deviceUUID","uniqueDeviceID","get","uuid","NgForageConfig","NgForage","NgForageCache","NTokenService","nLocalStorageService","nSessionStorage","updateTokens","tokensObj","isRemember","userObj","decodeToken","stringify","updateSessionStorage","urlBase64Decode","str","output","replace","b64DecodeUnicode","b64decode","String","Error","bc","bs","buffer","idx","charAt","fromCharCode","indexOf","decodeURIComponent","Array","map","call","charCodeAt","slice","join","token","parts","split","decoded","getTokenExpirationDate","date","Date","setUTCSeconds","exp","isTokenExpired","offsetSeconds","valueOf","NPubSubService","events","$sub","event","callback","complete","undefined","Subject","asObservable","subscribe","$pub","eventObject","next","NLogoutService","logout","NHTTPLoaderService","nLogoutService","nPubSubService","pendingRequests","showLoading","_isHTTPRequestInProgress","_isHTTPRequestInProgress$","isHTTPRequestInProgress","bool","alertError","message","NNotificationService","localStorageService","pubSubService","http","bHttpLoader","systemService","possiblePushTypes","firebaseSenderId","isNotificationEnabled","deviceType","loginSubscribe","enableNotification","ngOnInit","pushType","getPushType","document","addEventListener","checkPermission","res","initializeNotifications","initialiseWebPush","__this","messaging","firebase.messaging","Notification","requestPermission","getToken","sendRegDetails","err","onMessage","payload","notificationObj","options","body","icon","title","onclick","focus","APNSPushNotification","hasPermission","data","isEnabled","PushNotification","push","init","android","senderID","ios","alert","badge","sound","on","registrationId","plugins","notification","local","schedule","text","at","getTime","url","post","fbregid","currPushType","includes","toUpperCase","ngOnDestroy","unSubscribe","HttpClient","NLoginService","notificationService","nTokenService","loginCompleted","EventEmitter","login","userName","password","appProperties","loginUrl","details","username","platformDetails","pipe","isLoggedIn","Output","NAuthGuardService","nLoginService","router","canActivate","navigate","Router","NDataModelService","invalidDataModelName","invalidDataModelId","invalidDataModelObj","dataModelName","filter","keys","sort","pagenumber","pagesize","modelNameUrl","getDataSourceURL","checkIfValid","queryString","toQueryString","concat","index","catchError","throwError","put","dataModelObj","delete","update","updateObject","patch","getById","dataModelId","deleteById","updateById","dmObj","dmDs","dsDm","NHttpService","nHTTPLoader","inj","timeout","isRefreshingToken","tokenSubject","BehaviorSubject","intercept","req","requestInterceptor","handle","requestOptions","onCatch","finalize","onFinally","updateToken","appAuthenticationStrategy","take","switchMap","refreshToken","newToken","onCatchError","refreshUrl","userKey","headers","HttpHeaders","clone","getFullUrl","addDefaultHeaders","has","set","basicAuthUser","basicAuthPassword","warn","btoa","responseInterceptor","HttpErrorResponse","onSubscribeError","Injector","NSnackbarService","snackService","snackBarListner","msg","openSnackBar","add","action","id","onClick","snack","onAdd","onRemove","SnackComponent","Input","Component","selector","template","SnackbarComponent","snackbarService","max","onClear","snacks","setTimeout","timeoutObj","that_1","fcn_1","Function","emit","find","clearTimeout","calcTextColor","background","rgb","hex","m","g","b","exec","parseInt","hexToRgb","color","pow","startupServiceFactory","startupService","NgForageFactory","ngForageConfig","InstanceFactory","NeutrinosSeedServicesModule","NgModule","imports","CommonModule","HttpClientModule","RouterModule","providers","provide","HTTP_INTERCEPTORS","useClass","multi","APP_INITIALIZER","useFactory","deps","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// import { environment } from '../../environments/environment';\r\nimport { NUtility } from './n-util.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { Injectable } from '@angular/core';\r\nimport * as platform from 'platform';\r\n\r\n// @dynamic\r\nexport class NSystemService {\r\n  private static instance: NSystemService;\r\n\r\n  private _deviceType: string;\r\n  // private _deviceUUID;\r\n  uuid;\r\n  properties;\r\n  static envProperties;\r\n  static getInstance() {\r\n    if (!this.instance) {\r\n      this.instance = new NSystemService();\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  private constructor() {\r\n    this._deviceType = this.checkDevice();\r\n  }\r\n\r\n  /**\r\n   * Seter and getter for the environments\r\n   */\r\n\r\n  // set environments(properties) {\r\n  //   console.log(properties);\r\n  //   NSystemService.envProperties = properties;\r\n  //   this.properties = this.getVal('properties');\r\n  // }\r\n\r\n  // get environments() {\r\n  //   return NSystemService.envProperties;\r\n  // }\r\n\r\n  /**\r\n   * Returna 'mobile' or 'browser' based on the platform\r\n   */\r\n  checkDevice(): string {\r\n    if (window['device'] && (window['device']['platform'] != 'browser' || window['device']['platform'] != 'Browser')) {\r\n      return 'mobile';\r\n    } else if (window['device'] && (window['device']['platform'] == 'browser' || window['device']['platform'] == 'Browser')) {\r\n      return 'cordova_browser';\r\n    } else {\r\n      return 'browser';\r\n    }\r\n  }\r\n\r\n\r\n  public get deviceType() {\r\n    return this._deviceType;\r\n  }\r\n\r\n\r\n\r\n  public getVal(key) {\r\n    if (!NSystemService.envProperties) {\r\n      NSystemService.envProperties = window['neutrinos']['environments'];\r\n      this.properties = NSystemService.envProperties.properties;\r\n    }\r\n\r\n    if (key == 'properties') {\r\n      if (NSystemService.envProperties) {\r\n        return NSystemService.envProperties.properties;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    } else {\r\n      if (NSystemService.envProperties && NSystemService.envProperties.properties) {\r\n        return NSystemService.envProperties.properties[key];\r\n      } else {\r\n        return undefined;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  public isAndroid() {\r\n    if (window['device'] && window['device']['platform'] == 'Android') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isIOS() {\r\n    if (window['device'] && window['device']['platform'] == 'iOS') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getAndroidVersion() {\r\n    if (this.isAndroid()) {\r\n      return window['device']['version'];\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public getAuthUrl() {\r\n    // this.properties = this.getVal('properties');\r\n    return this.properties.baseUrl + this.properties.tenantName + '/auth/';\r\n  }\r\n  public getTenantUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/';\r\n  }\r\n\r\n  public getAppUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/' + this.properties.appName + '/';\r\n  }\r\n\r\n  public getProxyUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/proxy/';\r\n  }\r\n\r\n  public getDataModelUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/datamodel/' + this.properties.appDataSource + '/' + this.properties.appName + '/';\r\n  }\r\n\r\n  public getFileIOUrl() {\r\n    return this.properties.baseUrl + this.properties.tenantName + '/fileio/' +\r\n      this.properties.appDataSource + '/' + this.properties.appName + '/';\r\n  }\r\n\r\n  public getPlatformDetails(type) {\r\n    const pDetails = {\r\n      platform: platform.os.family,\r\n      platformVersion: platform.os.version,\r\n    };\r\n    if (type === 'browser') {\r\n      return Object.assign(pDetails, {\r\n        type: 'browser',\r\n        browser: platform.name,\r\n        browserVersion: platform.version,\r\n      });\r\n    } else if (type === 'mobile' || type === 'cordova_browser') {\r\n      return Object.assign(pDetails, {\r\n        type: 'mobile',\r\n        model: window['device'].model,\r\n        manufacturer: window['device'].manufacturer,\r\n        isVirtual: window['device'].isVirtual\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NSessionStorageService {\r\n  static sessionStorageCache: any = {};\r\n  constructor() {\r\n    NSessionStorageService.sessionStorageCache = sessionStorage;\r\n  }\r\n\r\n  getSessionStorage() {\r\n    return NSessionStorageService.sessionStorageCache;\r\n  }\r\n\r\n  setValue(key, value) {\r\n    NSessionStorageService.sessionStorageCache[key] = value;\r\n    sessionStorage.setItem(key, value);\r\n  }\r\n\r\n  getValue(key) {\r\n    if (!NSessionStorageService.sessionStorageCache[key]) {\r\n      return null;\r\n    }\r\n    try {\r\n      const obj = NSessionStorageService.sessionStorageCache[key];\r\n      return JSON.parse(obj);\r\n    } catch (error) {\r\n      return NSessionStorageService.sessionStorageCache[key];\r\n    }\r\n  }\r\n\r\n  remove(key) {\r\n    if (NSessionStorageService.sessionStorageCache.hasOwnProperty(key)) {\r\n      delete NSessionStorageService.sessionStorageCache[key];\r\n      sessionStorage.removeItem(key);\r\n    }\r\n  }\r\n\r\n  clearSessionStorage() {\r\n    NSessionStorageService.sessionStorageCache = {};\r\n    sessionStorage.clear();\r\n  }\r\n\r\n}\r\n","export class NUtility {\r\n  \r\n    constructor() { }\r\n  \r\n    generateUUID() {\r\n      return this.__s4() + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + '-' + this.__s4() + this.__s4() + this.__s4();\r\n    }\r\n  \r\n    __s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    }\r\n  }","import { NSystemService } from './n-system.service';\r\nimport { Injectable } from '@angular/core';\r\nimport {NgForage, NgForageCache, NgForageConfig, Driver} from 'ngforage';\r\nimport { NUtility } from './n-util.service';\r\n\r\n@Injectable()\r\nexport class NLocalStorageService {\r\n\r\n  storageCache: any = {};\r\n  private _deviceUUID;\r\n  private nativeStorageI;\r\n  constructor(private ngfConfig?: NgForageConfig, private readonly ngf?: NgForage, private readonly ngfCache?: NgForageCache) {\r\n  }\r\n\r\n\r\n\r\n  initStorage() {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova']) {\r\n        this.initNgForage();\r\n      }\r\n      this.ngf.iterate((value, key, iteratonNumber) => {\r\n        this.storageCache[key] = value;\r\n      }).then(result => {\r\n        this.checkDeviceId();\r\n        return resolve('iteration is completed')\r\n      }).catch(error => {\r\n        return reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  getStorage() {\r\n    return this.storageCache;\r\n  }\r\n\r\n\r\n  setValue(key, value) {\r\n    if (window['cordova']) {\r\n      this.initNgForage();\r\n    }\r\n    this.storageCache[key] = value;\r\n    return this.ngf.setItem(key, value).then(result => {\r\n      return result;\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  getValue(key): any | Promise<any> {\r\n    if (!this.storageCache[key]) {\r\n      return null;\r\n    } try {\r\n      const obj = this.storageCache[key]\r\n      return JSON.parse(obj);\r\n    } catch (error) {\r\n      return this.storageCache[key];\r\n    }\r\n  }\r\n\r\n  remove(key) {\r\n    delete this.storageCache[key];\r\n    if (window['cordova']) {\r\n      this.initNgForage();\r\n    }\r\n    this.ngf.removeItem(key).then(fulfilled => {\r\n      delete this.ngf[key];\r\n    }).catch(error => {\r\n      console.error('Could not remove', key);\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.storageCache = {};\r\n    this.ngf.clear();\r\n  }\r\n\r\n  private pluginCheck() {\r\n    if (window['cordova'] && window['NativeStorage']) {\r\n      this.nativeStorageI = window['NativeStorage'];\r\n      // return true;\r\n    }\r\n    // this.initStorage();\r\n  }\r\n\r\n  private getItemNs(key) {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova'] && window['NativeStorage']) {\r\n        this.nativeStorageI.getItem(key, result => {\r\n          resolve(result);\r\n        }, error => {\r\n          reject(error);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private setItemNs(key, value) {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova'] && window['NativeStorage']) {\r\n        this.nativeStorageI.setItem(key, value, result => {\r\n          resolve(result);\r\n        }, error => {\r\n          reject(error);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private removeItemNs(key) {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova'] && window['NativeStorage']) {\r\n        this.nativeStorageI.remove(key, (result) => {\r\n          resolve(result);\r\n        }, (error) => {\r\n          reject(error);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  private clearNs() {\r\n    return new Promise((resolve, reject) => {\r\n      if (window['cordova'] && window['NativeStorage']) {\r\n        this.nativeStorageI.clear(result => {\r\n          resolve(result);\r\n        }, error => {\r\n          reject(error);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private initNgForage() {\r\n    this.ngfConfig.configure({\r\n      name: 'MyApp',\r\n      driver: [\r\n        Driver.WEB_SQL,\r\n      ]\r\n    });\r\n\r\n  }\r\n\r\n  private promiseReflect(promise) {\r\n    return promise.then(resolved => { return { v: resolved, status: 'resolved' } }, error => { return { e: error, status: 'rejected' } })\r\n  }\r\n\r\n  clearLocalStorage() {\r\n    this.remove('userObj');\r\n    this.remove('accessToken');\r\n    this.remove('refreshToken');\r\n    this.remove('registrationId');\r\n  }\r\n\r\n  /**\r\n   * Due to timing issues and circular dependency checkDeviceId is moved from NSystemService\r\n  */\r\n\r\n  checkDeviceId() {\r\n    if (NSystemService.getInstance().checkDevice() === 'browser') {\r\n      this._deviceUUID = this.getValue('uuid');\r\n\r\n      if (!this._deviceUUID) {\r\n        this._deviceUUID = new NUtility().generateUUID();\r\n        this.setValue('uuid', this._deviceUUID);\r\n      }\r\n    } else {\r\n      window['plugins'].uniqueDeviceID.get((uuid) => {\r\n        this._deviceUUID = uuid;\r\n        this.setValue('uuid', this._deviceUUID);\r\n      });\r\n    }\r\n    return this._deviceUUID;\r\n  }\r\n\r\n  public get deviceUUID() {\r\n    return this._deviceUUID;\r\n  }\r\n}\r\n","import { NSessionStorageService } from './n-sessionStorage.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NTokenService {\r\n\r\n  nSessionStorage;\r\n  // nLocalStorageService: NLocalStorageService;\r\n\r\n  constructor(private nLocalStorageService: NLocalStorageService) {\r\n    this.nSessionStorage = new NSessionStorageService();\r\n    // this.nLocalStorageService = new NLocalStorageService();\r\n  }\r\n\r\n  updateTokens(tokensObj, isRemember?: Boolean) {\r\n    let userObj = this.decodeToken(tokensObj['accessToken'])\r\n    this.nSessionStorage.setValue('accessToken', tokensObj['accessToken']);\r\n    this.nSessionStorage.setValue('refreshToken', tokensObj['refreshToken']);\r\n    this.nSessionStorage.setValue('userObj', JSON.stringify(userObj));\r\n\r\n    if ((isRemember || this.nLocalStorageService.getValue('accessToken'))) {\r\n      this.nLocalStorageService.setValue('accessToken', tokensObj['accessToken']);\r\n      this.nLocalStorageService.setValue('refreshToken', tokensObj['refreshToken']);\r\n      this.nLocalStorageService.setValue('userObj', JSON.stringify(userObj));\r\n    }\r\n  }\r\n\r\n  updateSessionStorage() {\r\n    this.updateTokens(this.nLocalStorageService.getStorage(), true);\r\n  }\r\n\r\n  public urlBase64Decode(str: string): string {\r\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    switch (output.length % 4) {\r\n      case 0: { break; }\r\n      case 2: { output += '=='; break; }\r\n      case 3: { output += '='; break; }\r\n      default: {\r\n        throw 'Illegal base64url string!';\r\n      }\r\n    }\r\n    return this.b64DecodeUnicode(output);\r\n  }\r\n\r\n  // credits for decoder goes to https://github.com/atk\r\n  private b64decode(str: string): string {\r\n    let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n    let output: string = '';\r\n\r\n    str = String(str).replace(/=+$/, '');\r\n\r\n    if (str.length % 4 == 1) {\r\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\r\n    }\r\n\r\n    for (\r\n      // initialize result and counters\r\n      let bc: number = 0, bs: any, buffer: any, idx: number = 0;\r\n      // get next character\r\n      buffer = str.charAt(idx++);\r\n      // character found in table? initialize bit storage and add its ascii value;\r\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\r\n        // and if not first of each 4 characters,\r\n        // convert the first 8 bits to one ascii character\r\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\r\n    ) {\r\n      // try to find character in table (0-63, not found => -1)\r\n      buffer = chars.indexOf(buffer);\r\n    }\r\n    return output;\r\n  }\r\n\r\n  // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\r\n  private b64DecodeUnicode(str: any) {\r\n    return decodeURIComponent(Array.prototype.map.call(this.b64decode(str), (c: any) => {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n  }\r\n\r\n  public decodeToken(token: string): any {\r\n    let parts = token.split('.');\r\n\r\n    if (parts.length !== 3) {\r\n      throw new Error('JWT must have 3 parts');\r\n    }\r\n\r\n    let decoded = this.urlBase64Decode(parts[1]);\r\n    if (!decoded) {\r\n      throw new Error('Cannot decode the token');\r\n    }\r\n\r\n    return JSON.parse(decoded);\r\n  }\r\n\r\n  public getTokenExpirationDate(token: string): Date {\r\n    let decoded: any;\r\n    decoded = this.decodeToken(token);\r\n\r\n    if (!decoded.hasOwnProperty('exp')) {\r\n      return null;\r\n    }\r\n\r\n    let date = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n    date.setUTCSeconds(decoded.exp);\r\n\r\n    return date;\r\n  }\r\n\r\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n    let date = this.getTokenExpirationDate(token);\r\n    offsetSeconds = offsetSeconds || 0;\r\n\r\n    if (date == null) {\r\n      return false;\r\n    }\r\n\r\n    // Token expired?\r\n    return !(date.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable, Subscription } from 'rxjs';\r\n\r\nconst ServiceName: string = \"PubSub Service\";\r\n\r\n@Injectable()\r\nexport class NPubSubService {\r\n  private events = {};\r\n\r\n  constructor() { }\r\n\r\n  public $sub(event: string): Observable<any>;\r\n  public $sub(event: string, callback: (value: any) => void): Subscription;\r\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\r\n  public $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\r\n  public $sub(event: string, callback?: (value: any) => void, error?: (error: any) => void, complete?: () => void) {\r\n      if (!event) {\r\n          throw new Error(`[${ServiceName}] => Subscription method must get event name.`);\r\n      }\r\n\r\n      if (this.events[event] === undefined) {\r\n          this.events[event] = new Subject<any>();\r\n      }\r\n\r\n      if (typeof callback !== 'function') {\r\n          return this.events[event].asObservable();\r\n      } else {\r\n          return this.events[event].asObservable().subscribe(callback, error, complete);\r\n      }\r\n  }\r\n\r\n  public $pub(event: string, eventObject?: any) {\r\n      if (!event) {\r\n          throw new Error(`[${ServiceName}] => Publish method must get event name.`);\r\n      } else if (!this.events[event]) {\r\n          return;\r\n      }\r\n      this.events[event].next(eventObject);\r\n  }\r\n}\r\n\r\nexport interface IPubSubService {\r\n  $pub(event: string, eventObject?: any);\r\n  $sub(event: string): Observable<any>;\r\n  $sub(event: string, callback: (value: any) => void): Subscription;\r\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\r\n  $sub(event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\r\n}\r\n\r\ninterface I$sub {\r\n  (event: string): Observable<any>;\r\n  (event: string, callback: (value: any) => void): Subscription;\r\n  (event: string, callback: (value: any) => void, error: (error: any) => void): Subscription;\r\n  (event: string, callback: (value: any) => void, error: (error: any) => void, complete: () => void): Subscription;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NSessionStorageService } from './n-sessionStorage.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\n\r\n@Injectable()\r\nexport class NLogoutService {\r\n\r\n  nSessionStorage = new NSessionStorageService();\r\n  // nLocalStorageService = new NLocalStorageService();\r\n  constructor(private nLocalStorageService: NLocalStorageService) { }\r\n\r\n  logout() {\r\n    this.nSessionStorage.clearSessionStorage();\r\n    this.nLocalStorageService.clearLocalStorage();\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject ,  Observable } from 'rxjs';\r\n// import { NSnackbarService } from './n-snackbar.service';\r\nimport { NLogoutService } from './n-logout.service';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\n// import { NSnackbarService } from './snackbar/service/snackbar.service';\r\n\r\n@Injectable()\r\nexport class NHTTPLoaderService {\r\n  public pendingRequests = 0;\r\n  public showLoading = false;\r\n  private _isHTTPRequestInProgress = new Subject<boolean>();\r\n  _isHTTPRequestInProgress$ = this._isHTTPRequestInProgress.asObservable();\r\n\r\n  constructor(private nLogoutService: NLogoutService, private nPubSubService: NPubSubService) {\r\n\r\n  }\r\n\r\n  isHTTPRequestInProgress(bool) {\r\n    if (bool) {\r\n      this.pendingRequests++;\r\n      if (!this.showLoading) {\r\n        this._isHTTPRequestInProgress.next(bool);\r\n      }\r\n      this.showLoading = true;\r\n    } else {\r\n      this.pendingRequests--;\r\n      if (this.pendingRequests <= 0) {\r\n        if (this.showLoading) {\r\n          this._isHTTPRequestInProgress.next(bool);\r\n        }\r\n        this.showLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  alertError(error) {\r\n    if (error.status < 200 || error.status > 500) {\r\n      if (error.status === 0) {\r\n        this.nPubSubService.$pub('openSnackBar', 'Connectivity issue');\r\n      } else {\r\n        this.nPubSubService.$pub('openSnackBar', 'Response failure')\r\n      }\r\n    } else if (error.status === 401) {\r\n      this.nLogoutService.logout();\r\n      if (error.error) {\r\n        this.nPubSubService.$pub('openSnackBar', error.error)\r\n      } else {\r\n        this.nPubSubService.$pub('openSnackBar', error)\r\n      }\r\n    } else if (error.error) {\r\n      if (error.error instanceof Object) {\r\n        this.nPubSubService.$pub('openSnackBar', error.error.message)\r\n      } else {\r\n        this.nPubSubService.$pub('openSnackBar', error.error)\r\n      }\r\n    } else {\r\n      this.nPubSubService.$pub('openSnackBar', 'Response failure')\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Injectable, OnInit, OnDestroy } from '@angular/core';\r\nimport { NSystemService } from './n-system.service';\r\nimport { Observable } from 'rxjs';\r\ndeclare var PushNotification: any;\r\ndeclare var APNSPushNotification: any;\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport * as firebase from 'firebase';\r\nimport { NPubSubService } from './n-pubSub.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NSessionStorageService } from './n-sessionStorage.service';\r\n// import { Router } from '@angular/router';\r\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\r\nimport { environment } from '../../environments/environment.prod';\r\n\r\n\r\n@Injectable()\r\nexport class NNotificationService {\r\n  // private static instance: NNotificationService;\r\n  private systemService: NSystemService = NSystemService.getInstance();\r\n  private firebaseSenderId: string;\r\n  private isNotificationEnabled: boolean;\r\n  private deviceType; string;\r\n  private resDetails;\r\n  private deviceUUID: string;\r\n  private possiblePushTypes: string[] = ['APNS','FCM'];\r\n  loginSubscribe;\r\n  sessionStorage: NSessionStorageService;\r\n  appName;\r\n  constructor(private localStorageService: NLocalStorageService, private pubSubService: NPubSubService,\r\n    private http: HttpClient, private bHttpLoader: NHTTPLoaderService) {\r\n    this.firebaseSenderId = this.systemService.getVal('firebaseSenderId');\r\n    this.isNotificationEnabled = this.systemService.getVal('isNotificationEnabled');\r\n    this.appName = this.systemService.getVal('appName');\r\n    this.deviceType = this.systemService.deviceType;\r\n    this.sessionStorage = new NSessionStorageService();\r\n    this.loginSubscribe = this.pubSubService.$sub('firebaseRegister', () => {\r\n      this.enableNotification();\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  enableNotification() {\r\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\r\n    document.addEventListener('deviceready', event => {\r\n      if (this.isNotificationEnabled) {\r\n        if (this.deviceType && this.deviceType != 'browser') {\r\n          this.deviceType = this.systemService.deviceType;\r\n          this.checkPermission(pushType).then(res => {\r\n            if (res) {\r\n              this.initializeNotifications(pushType);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    if (this.isNotificationEnabled && pushType !== 'APNS') {\r\n      if (this.deviceType && this.deviceType == 'browser' && window['Notification']) {\r\n        this.initialiseWebPush();\r\n      }\r\n    }\r\n  }\r\n\r\n  initialiseWebPush() {\r\n    const __this = this;\r\n    const messaging = firebase.messaging();\r\n\r\n    Notification.requestPermission()\r\n      .then(function () {\r\n        return messaging.getToken();\r\n      })\r\n      .then(function (token) {\r\n        if (token) {\r\n          __this.sendRegDetails(token);\r\n        }\r\n      })\r\n      .catch(function (err) {\r\n        __this.bHttpLoader.alertError(err);\r\n      });\r\n\r\n    messaging.onMessage(function (payload) {\r\n      if (payload['notification']) {\r\n        let notificationObj = payload['notification'];\r\n        let options = {\r\n          body: notificationObj.body,\r\n          icon: notificationObj.icon\r\n        }\r\n        // creating a native browser message\r\n        let notificationUI = new Notification(notificationObj.title, options);\r\n        notificationUI.onclick = function () {\r\n          window.focus(); // window is focused when the user clicks the notification using this\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  checkPermission(pushType?) {\r\n    // Android & iOS only\r\n    // Checks whether the push notification permission has been granted.\r\n    return new Promise((resolve) => {\r\n      pushType = this.getPushType(pushType);\r\n      if ((this.deviceType === 'Android' || this.deviceType === 'iOS') && (pushType === 'FCM' )) {\r\n        PushNotification.hasPermission(function (data) {\r\n          return resolve(data.isEnabled);\r\n        });\r\n      } else if (this.deviceType === 'iOS' && pushType === 'APNS') {\r\n         APNSPushNotification.hasPermission(function (data) {\r\n          return resolve(data.isEnabled);\r\n        });\r\n      } else {\r\n        return resolve(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  initializeNotifications(pushType?) {\r\n    //pushType = pushType ? pushType : 'FCM';\r\n    pushType = this.getPushType(pushType);\r\n\r\n    let push;\r\n    // Default if for FCM\r\n    if (pushType === 'FCM') {\r\n      push = window['PushNotification'].init({\r\n        android: {\r\n          senderID: this.firebaseSenderId\r\n        },\r\n        ios: {\r\n          alert: \"true\",\r\n          badge: \"true\",\r\n          sound: \"true\",\r\n          senderID: this.firebaseSenderId\r\n        },\r\n      });\r\n    }\r\n    // New APNS plugin init\r\n    else if (pushType === 'APNS') {\r\n      push = window['APNSPushNotification'].init({\r\n        ios: {\r\n          alert: \"true\",\r\n          badge: \"true\",\r\n          sound: \"true\"\r\n        }\r\n      });\r\n    }\r\n    push.on('registration', (data) => {\r\n      // data.registrationId\r\n      this.sendRegDetails(data.registrationId);\r\n    });\r\n\r\n    // ToDo Christy get call back function from app user to change what happens once a notification arrives\r\n    push.on('notification', (data) => {\r\n      window['cordova'].plugins.notification.local.schedule({\r\n        title: data.title,\r\n        text: data.message,\r\n        sound: data.sound,\r\n        at: new Date().getTime()\r\n      });\r\n    });\r\n\r\n    push.on('error', (e) => {\r\n      // e.message\r\n      console.error(e);\r\n    });\r\n  }\r\n\r\n  sendRegDetails(registrationId) {\r\n    this.localStorageService.setValue('registrationId', registrationId);\r\n    var url = this.systemService.getTenantUrl() + 'notification/' + this.systemService.getVal('appName') + '/register';\r\n    let pushType = this.getPushType(this.systemService.getVal('pushType'));\r\n    this.http.post(url, {\r\n      'key': this.sessionStorage.getValue('userObj')['userKey'],\r\n      'uuid': this.localStorageService.getValue('uuid'), \r\n      'fbregid': registrationId,\r\n      'pushType': pushType\r\n    }).subscribe(result => {\r\n      // this.pubSubService.$pub('FBRegComp');\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  getPushType (currPushType) {\r\n    let isValidPush = typeof currPushType !== 'undefined' && this.possiblePushTypes.includes(currPushType.toUpperCase());\r\n    let pushType = isValidPush ? currPushType.toUpperCase() : 'FCM';\r\n    return pushType;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loginSubscribe.unSubscribe();\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Injectable, EventEmitter, Output, Injector } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NTokenService } from './n-token.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\nimport { NSessionStorageService } from './n-sessionStorage.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { NNotificationService } from './n-notification.service';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class NLoginService {\r\n  loginUrl;\r\n  appProperties;\r\n  systemService;\r\n  nSessionStorage;\r\n  uuid;\r\n  details: any;\r\n\r\n  @Output() loginCompleted = new EventEmitter();\r\n  constructor(private http: HttpClient, private pubSubService: NPubSubService, private notificationService: NNotificationService,\r\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\r\n    this.systemService = NSystemService.getInstance();\r\n    // this.nTokenService = new NTokenService();\r\n    this.nSessionStorage = new NSessionStorageService();\r\n    // this.nLocalStorageService = new NLocalStorageService();\r\n  }\r\n\r\n\r\n  login(userName, password, isRemember?) {\r\n    this.appProperties = this.systemService.getVal('properties');\r\n    this.loginUrl = this.systemService.getAuthUrl() + this.appProperties.appName;\r\n    this.uuid = this.nLocalStorageService.getValue('uuid');\r\n    if (!this.uuid) {\r\n      this.uuid = this.nLocalStorageService.checkDeviceId();\r\n    }\r\n    this.details = {\r\n      username: userName,\r\n      password: password,\r\n    };\r\n    this.details.platformDetails = this.systemService.getPlatformDetails(this.systemService.checkDevice());\r\n    this.details.platformDetails['uuid'] = this.uuid;\r\n    return this.http.post(this.loginUrl, JSON.stringify(this.details)).pipe(map(result => {\r\n      const tokensObj = result;\r\n      if (tokensObj) {\r\n        this.nTokenService.updateTokens(tokensObj, isRemember);\r\n      }\r\n      // TODO chris array of supported pushes currently only support APNS and Firebase\r\n      if ((this.systemService.getVal('firebaseSenderId') != 'FIREBASE_SENDER_ID' && this.systemService.getVal('firebaseAuthKey') != 'FIREBASE_AUTH_KEY') \r\n           || (this.systemService.getVal('pushType') === 'APNS' && this.systemService.isIOS())) {\r\n        this.pubSubService.$pub('firebaseRegister');\r\n      }\r\n      this.pubSubService.$pub('loginComplete');\r\n      return (result);\r\n    }, error => {\r\n      return (error);\r\n    }));\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.nLocalStorageService.initStorage().then(result => {\r\n      if (this.nSessionStorage.getValue('accessToken') && this.nSessionStorage.getValue('refreshToken') &&\r\n        this.nSessionStorage.getValue('accessToken') != 'null' && this.nSessionStorage.getValue('refreshToken') != 'null') {\r\n        return true;\r\n      }\r\n      return false;\r\n    }).catch(error => {\r\n      return false;\r\n    });\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { NLoginService } from './n-login.service';\r\n\r\n@Injectable()\r\nexport class NAuthGuardService implements CanActivate {\r\n\r\n  constructor(private nLoginService: NLoginService, private router: Router) { }\r\n\r\n  canActivate() {\r\n    return this.nLoginService.isLoggedIn().then(result => {\r\n      if (result) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['unauthorized']);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { NSystemService } from './n-system.service';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class NDataModelService {\r\n  private systemService: NSystemService;\r\n  private dmUrl: string;\r\n  private invalidDataModelName: string = 'Invalid data model name.';\r\n  private invalidDataModelId: string = 'Invalid data model id.';\r\n  private invalidDataModelObj: string = 'Invalid data model object.';\r\n  private dmDs;\r\n  constructor(private http: HttpClient) {\r\n    this.systemService = NSystemService.getInstance();\r\n  }\r\n\r\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\r\n  /**\r\n   *\r\n   * @param dataModelName\r\n   * @param filter The filter query parameter allows to specify conditions on the documents to return.\r\n   * The filter qparam value is any mongodb query… Defaults to {}\r\n   * @param keys Projections to be applited on mongo db.\r\n   * @param sort sort to be applied on the query results. Defaults to {}\r\n   * @param pagenumber Page number for paginated queries. Defaults to 1\r\n   * @param pagesize Size of each page to be returned. Defaults to 100.\r\n   */\r\n  get(dataModelName, filter?, keys?, sort?, pagenumber?, pagesize?): Observable<any> {\r\n    if (dataModelName) {\r\n      // let modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\r\n      let modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\r\n      if (this.checkIfValid(filter) || this.checkIfValid(keys) || this.checkIfValid(sort) ||\r\n        this.checkIfValid(pagenumber) || this.checkIfValid(pagesize)) {\r\n        let queryString = `${this.toQueryString({\r\n          'filter': filter,\r\n          'keys': keys,\r\n          'sort': sort,\r\n          'pagenumber': pagenumber,\r\n          'pagesize': pagesize\r\n        })}`;\r\n        if (queryString === '') {\r\n          queryString += '?filter={}';\r\n        } else {\r\n          queryString = '?'.concat(queryString);\r\n        }\r\n        modelNameUrl += queryString;\r\n      }\r\n      return this.http.get(modelNameUrl).pipe(map((value, index) => {\r\n        return value;\r\n      }), catchError(error => {\r\n        return throwError(error);\r\n      }));\r\n    } else {\r\n      return throwError(new Error(`Could not get ${dataModelName}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // PUT /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name of the app\r\n   * @param dataModelObj Data Model object which is to be inserted\r\n   */\r\n  put(dataModelName, dataModelObj): Observable<any> {\r\n    if (dataModelName) {\r\n      if (dataModelObj) {\r\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\r\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\r\n        return this.http.put(modelNameUrl, dataModelObj).pipe(map((value, index) => {\r\n          return value;\r\n        }), catchError(error => {\r\n          return throwError(error);\r\n        }));\r\n      } else {\r\n        return throwError(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelObj}`));\r\n      }\r\n    } else {\r\n      return throwError(new Error(`Could not put ${dataModelObj} in ${dataModelName}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\r\n  /**\r\n   *\r\n   * @param dataModelName\r\n   * @param filter\r\n   */\r\n  delete(dataModelName, filter): Observable<any> {\r\n    let modelNameUrl;\r\n    if (dataModelName) {\r\n      // modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\r\n      modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\r\n\r\n      if (this.checkIfValid(filter) && filter != '') {\r\n        modelNameUrl += `?filter=${filter}`;\r\n      } else {\r\n        modelNameUrl += '?filter={}';\r\n      }\r\n      return this.http.delete(modelNameUrl).pipe(map((value, index) => {\r\n        return value;\r\n      }), catchError(error => {\r\n        return throwError(error);\r\n      }));\r\n    } else {\r\n      return throwError(new Error(`Could not delete ${dataModelName}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name which is to be updated\r\n   * @param dataModelObj New data model object\r\n   */\r\n  update(dataModelName, updateObject): Observable<any> {\r\n    if (dataModelName && updateObject) {\r\n      // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}`;\r\n      const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName;\r\n      return this.http.patch(modelNameUrl, updateObject).pipe(map((value, index) => {\r\n        return value;\r\n      }), catchError(error => {\r\n        return throwError(error);\r\n      }));\r\n    } else {\r\n      return throwError(new Error(`Could not update ${dataModelName}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // GET /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name which is to be updated\r\n   * @param dataModelId Data model id which is to be updated\r\n   */\r\n  getById(dataModelName, dataModelId): Observable<any> {\r\n    if (dataModelName) {\r\n      if (dataModelId) {\r\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\r\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\r\n        return this.http.get(modelNameUrl).pipe(map((value, index) => {\r\n          return value;\r\n        }), catchError(error => {\r\n          return throwError(error);\r\n        }));\r\n      } else {\r\n       throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\r\n      }\r\n    } else {\r\n      throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  // DELETE /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name which is to be deleted\r\n   * @param dataModelId Data model id which is to be deleted\r\n   */\r\n  deleteById(dataModelName, dataModelId) {\r\n    if (dataModelName) {\r\n      if (dataModelId) {\r\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\r\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\r\n        return this.http.delete(modelNameUrl).pipe(map((value, index) => {\r\n          return value;\r\n        }), catchError(error => {\r\n          return throwError(error);\r\n        }));\r\n      } else {\r\n      throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\r\n      }\r\n    } else {\r\n      return throwError(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  //PATCH /{tenantName}/datamodel/{datasource}/{appName}/{dataModelName}/{dataModelId}\r\n  /**\r\n   *\r\n   * @param dataModelName Data model name which is to be update\r\n   * @param dataModelId Data model id which is to be updated\r\n   * @param dataModelObj Data Model object which is to be inserted\r\n   */\r\n  updateById(dataModelName, dataModelId, dataModelObj) {\r\n    if (dataModelName) {\r\n      if (dataModelId) {\r\n        // const modelNameUrl = `${this.getDataSourceURL(dataModelName)}${dataModelName}/${dataModelId}`;\r\n        const modelNameUrl = this.getDataSourceURL(dataModelName) + dataModelName + \"/\" + dataModelId;\r\n        var dmObj = Object.assign({}, dataModelObj);\r\n        delete dmObj['_id'];\r\n        return this.http.patch(modelNameUrl, dmObj).pipe(map((value, index) => {\r\n          return value;\r\n        }), catchError(error => {\r\n          return throwError(error);\r\n        }));\r\n      } else {\r\n        throwError(new Error(`Could not get ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelId}`));\r\n      }\r\n    } else {\r\n      return throwError(new Error(`Could not delete ${dataModelName} by id ${dataModelId}. ${this.invalidDataModelName}`));\r\n    }\r\n  }\r\n\r\n  private toQueryString(obj) {\r\n    const parts = [];\r\n    for (const i in obj) {\r\n      if (obj.hasOwnProperty(i) && this.checkIfValid(obj[i])) {\r\n        parts.push((i) + '=' + JSON.stringify(obj[i]));\r\n      }\r\n    }\r\n    return parts.join('&');\r\n  }\r\n\r\n  private checkIfValid(value: any) {\r\n    if (value === undefined || value == null) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  private getDataSourceURL(dataModelName) {\r\n    if (!this.dmDs) {\r\n      this.dmDs = window['neutrinos']['dataSource'];\r\n    }\r\n    const dsDm = this.dmDs[dataModelName];\r\n    const properties = this.systemService.properties;\r\n    if (dsDm) {\r\n      return properties.baseUrl + properties.tenantName + '/datamodel/' + dsDm + '/' + properties.appName + '/';\r\n    } else {\r\n      return this.systemService.getDataModelUrl();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpHeaders,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n  HttpClient\r\n} from '@angular/common/http';\r\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\r\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NSessionStorageService } from './n-sessionStorage.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { NTokenService } from './n-token.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\nimport { timeout, catchError, finalize, switchMap, filter, take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class NHttpService {\r\n  timeout = 90000;\r\n  systemService;\r\n  nSessionStorage;\r\n  appProperties;\r\n  isRefreshingToken = false;\r\n  nPubSubService;\r\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n  constructor(private nHTTPLoader: NHTTPLoaderService, private inj: Injector,\r\n    private nLocalStorageService: NLocalStorageService, private nTokenService: NTokenService) {\r\n    this.systemService = NSystemService.getInstance();\r\n    this.nSessionStorage = new NSessionStorageService();\r\n    this.appProperties = this.systemService.getVal('properties');\r\n    this.nPubSubService = new NPubSubService();\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.requestInterceptor();\r\n\r\n    // Pass on the cloned request instead of the original request.\r\n    return next.handle(this.requestOptions(req))\r\n      .pipe(timeout(this.timeout)\r\n        , catchError(error => this.onCatch(error, req, next))\r\n        , finalize(() => {\r\n          this.onFinally();\r\n        }));\r\n  }\r\n\r\n  updateToken(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): any {\r\n    if (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\r\n      this.appProperties.appAuthenticationStrategy === 'localAuth') {\r\n      if (!this.isRefreshingToken) {\r\n        this.isRefreshingToken = true;\r\n\r\n        // Reset here so that the following requests wait until the token\r\n        // comes back from the refreshToken call.\r\n        this.tokenSubject.next(null);\r\n\r\n        return this.refreshToken()\r\n          .pipe(\r\n            switchMap((tokensObj: Object) => {\r\n              if (tokensObj) {\r\n                this.nTokenService.updateTokens(tokensObj);\r\n                const newToken = tokensObj['accessToken'];\r\n                this.tokenSubject.next(newToken);\r\n                return next.handle(this.requestOptions(req));\r\n              }\r\n              return throwError(new Error('Can\\'t refresh the token'));\r\n            }),\r\n            catchError(err => this.onCatchError(err)),\r\n            finalize(() => this.isRefreshingToken = false)\r\n          );\r\n      } else {\r\n        return this.tokenSubject.pipe(\r\n          filter(token => token != null),\r\n          take(1),\r\n          switchMap(token => next.handle(this.requestOptions(req)))\r\n        );\r\n      }\r\n    } else {\r\n      return this.onCatchError(error);\r\n    }\r\n  }\r\n\r\n  refreshToken() {\r\n    const http = this.inj.get(HttpClient);\r\n    const appProperties = this.systemService.getVal('properties');\r\n    const refreshUrl = this.systemService.getAuthUrl() + appProperties.appName + '/refresh';\r\n    const body = {\r\n      'platformDetails': this.systemService.getPlatformDetails(this.systemService.checkDevice()),\r\n      'userKey': this.nSessionStorage.getValue('userObj')['userKey'],\r\n      'refreshToken': this.nSessionStorage.getValue('refreshToken')\r\n    };\r\n    body.platformDetails['uuid'] = this.nLocalStorageService.getValue('uuid');\r\n    return http.post(refreshUrl, body);\r\n  }\r\n\r\n\r\n  /**\r\n   * Request options.\r\n   * @param options\r\n   * @returns HttpRequest\r\n   */\r\n  private requestOptions(req?: HttpRequest<any>) {\r\n    let headers = req.headers;\r\n    if (req.headers == null) {\r\n      headers = new HttpHeaders();\r\n    }\r\n    req = req.clone({\r\n      url: this.getFullUrl(req.url),\r\n      headers: headers\r\n    });\r\n    const baseUrl = NSystemService.getInstance().getVal('baseUrl');\r\n    const isArt = (baseUrl !== '' && req.url.includes(baseUrl));\r\n    return isArt ? this.addDefaultHeaders(req) : req;\r\n  }\r\n\r\n\r\n  /**\r\n  * Default options.\r\n  * @param options\r\n  * @returns HttpHeadedrs\r\n  */\r\n  private addDefaultHeaders(req: any) {\r\n    /**\r\n     * TODO: Add all default Headers over here\r\n     */\r\n    if (!req.headers.has('Access-Control-Allow-Origin')) {\r\n      req.headers = req.headers.set('Access-Control-Allow-Origin', '*');\r\n    }\r\n\r\n    if (!req.headers.has('Content-Type')) {\r\n      req.headers = req.headers.set('Content-Type', 'application/json');\r\n    } else if (req.headers.has('Content-Type') && (req.headers.get('Content-Type') === 'no-content')) {\r\n      req.headers = req.headers.delete('Content-Type');\r\n    }\r\n\r\n    if (!req.headers.has('Accept')) {\r\n      req.headers = req.headers.set('Accept', 'application/json');\r\n    }\r\n\r\n    if (!req.headers.has('Authorization')) {\r\n      this.appProperties = this.systemService.getVal('properties');\r\n      if (this.appProperties && this.appProperties.appAuthenticationStrategy === 'basicAuth') {\r\n        let username, password;\r\n        if (this.appProperties.basicAuthUser && this.appProperties.basicAuthPassword) {\r\n          username = this.appProperties.basicAuthUser;\r\n          password = this.appProperties.basicAuthPassword;\r\n        } else {\r\n          username = \"bhive-art-proxyuser\";\r\n          password = \"password\";\r\n          console.warn(\"Authentication strategy: Basic Auth. basicAuthUser and basicAuthPassword are not configured in environment. Setting default values.\");\r\n        }\r\n        req.headers = req.headers.set('Authorization', 'Basic ' + btoa(username + \":\" + password));\r\n      } else if (this.appProperties && (this.appProperties.appAuthenticationStrategy === 'activeDirectory' ||\r\n        this.appProperties.appAuthenticationStrategy === 'localAuth')) {\r\n        if (this.nSessionStorage.getValue('accessToken')) {\r\n          req.headers = req.headers.set('Authorization', 'Bearer ' + this.nSessionStorage.getValue('accessToken'));\r\n        }\r\n      }\r\n    }\r\n    return req;\r\n  }\r\n\r\n  /**\r\n   * Build API url.\r\n   * @param url\r\n   * @returns string\r\n   */\r\n  private getFullUrl(url: string): string {\r\n    // return full URL to API here\r\n    return url;\r\n  }\r\n\r\n  /**\r\n   * Request interceptor.\r\n   */\r\n  private requestInterceptor(): void {\r\n    this.nHTTPLoader.isHTTPRequestInProgress(true);\r\n  }\r\n\r\n  /**\r\n   * Response interceptor.\r\n   */\r\n  private responseInterceptor(): void {\r\n    this.nHTTPLoader.isHTTPRequestInProgress(false);\r\n  }\r\n\r\n  /**\r\n    * Error handler.\r\n    * @param error\r\n    * @param caught\r\n    * @returns ErrorObservable\r\n    */\r\n  private onCatch(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\r\n    if (error instanceof HttpErrorResponse) {\r\n      if ((<HttpErrorResponse>error).status === 403 && (<HttpErrorResponse>error).error.message === 'jwt expired') {\r\n        return this.updateToken(error, req, next);\r\n      } else {\r\n        return this.onSubscribeError(error);\r\n      }\r\n    } else {\r\n      return this.onSubscribeError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onSubscribeError\r\n   * @param error\r\n   */\r\n  private onSubscribeError(err: HttpErrorResponse): Observable<any> {\r\n    this.nHTTPLoader.alertError(err);\r\n    return this.onCatchError(err);\r\n  }\r\n  /**\r\n   * onFinally\r\n   */\r\n  private onFinally(): void {\r\n    this.responseInterceptor();\r\n  }\r\n\r\n  private onCatchError(error: HttpErrorResponse): Observable<any> {\r\n    return throwError(error);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n// import { MatSnackBar } from '@angular/material';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\n\r\n\r\n@Injectable()\r\nexport class NSnackbarService {\r\n  snackBarListner;\r\n  private snackService = new Subject<any>();\r\n  constructor(private nPubSubService: NPubSubService) {\r\n    if (NSystemService.getInstance().getVal('useDefaultExceptionUI')) {\r\n      this.snackBarListner = this.nPubSubService.$sub('openSnackBar', (msg) => {\r\n        this.openSnackBar(msg);\r\n      })\r\n    }\r\n  }\r\n\r\n  get() {\r\n    return this.snackService.asObservable();\r\n  }\r\n\r\n\r\n\r\n  add(data: {\r\n    msg: string, timeout?: number, background?: string, color?: string, customClass?: any,\r\n    action?: { text: string, onClick?: Function, color?: string }, onAdd?: Function, onRemove?: Function\r\n  }) {\r\n    this.snackService.next({\r\n      action: 'add',\r\n      data: data\r\n    });\r\n  }\r\n\r\n  remove(id: string) {\r\n    this.snackService.next({ action: 'remove', id: id });\r\n  }\r\n\r\n  clear() {\r\n    this.snackService.next({ action: 'clear' });\r\n  }\r\n\r\n  openSnackBar(message, timeout?, ) {\r\n    this.add({\r\n      msg: message,\r\n      timeout: timeout || 5000,\r\n      action: {\r\n        text: 'Close',\r\n        onClick: (snack) => {\r\n        },\r\n      },\r\n      onAdd: (snack) => {\r\n      },\r\n      onRemove: (snack) => {\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'n-snack',\r\n  template: `\r\n     <div class=\"snack\" [ngStyle]=\"{background: background ? background : '#323232' , color: color ? color : '#fff'}\" [ngClass]=\" ['snackbar-layout', 'customClass' ]\">\r\n          <ng-content></ng-content>\r\n       </div> \r\n  `,\r\n  styleUrls: ['../snackbar/snackbar.style.css']\r\n})\r\nexport class SnackComponent {\r\n  @Input() background;\r\n  @Input() color;\r\n  @Input() customClass;\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NSnackbarService } from '../../n-snackbar.service';\r\n\r\n@Component({\r\n  selector: 'n-snackbar',\r\n  template: `\r\n      <div class=\"snackbars\" [ngClass]=\"position || 'bottom-center'\">\r\n          <n-snack   *ngFor=\"let snackbar of snacks\" [background]=\"snackbar.background || background\"\r\n                        [customClass]=\"snackbar.customClass || customClass\"\r\n                        [color]=\"snackbar.color || color || calcTextColor(snackbar.background || background)\">\r\n              <div class=\"container\">\r\n              <div class=\"snack-text child\" >\r\n                  {{snackbar.msg}}\r\n              </div>\r\n              <div *ngIf=\"snackbar.action.text\" class=\"snack-action\" (click)=\"snackbar.action.onClick()\"\r\n                   [ngStyle]=\"{color: snackbar.action.color || accent}\">\r\n                  {{snackbar.action.text}}\r\n              </div>\r\n              </div>\r\n          </n-snack>\r\n      </div>\r\n  `,\r\n  styleUrls: ['./snackbar.style.css']\r\n})\r\nexport class SnackbarComponent {\r\n  @Input() position: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\r\n  @Input() max: number = 1;\r\n  @Input() background: string;\r\n  @Input() accent: string;\r\n  @Input() color: string;\r\n  @Input() customClass: any;\r\n  @Input() timeout: number;\r\n\r\n  @Output() public onAdd: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public onRemove: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public onClear: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  snacks: Array<{\r\n    id: string, msg: string, timeout?: number, color?: string, background?: string, customClass?: any, action?: {\r\n      text: string, onClick?: Function, color?: string\r\n    }, onAdd?: Function, onRemove?: Function, timeoutObj?: any\r\n  }> = [];\r\n\r\n  constructor(private snackbarService: NSnackbarService) {\r\n    this.snackbarService.get()\r\n      .subscribe(snack => {\r\n        if (snack.action === 'add') {\r\n          this.add(snack.data);\r\n        } else if (snack.action === 'remove') {\r\n          this.remove(snack.id);\r\n        } else if (snack.action === 'clear') {\r\n          this.clear();\r\n        }\r\n      });\r\n  }\r\n\r\n  add(snack) {\r\n    let timeout;\r\n    const id = this.uuid();\r\n\r\n    if (this.max && this.max > 0 && this.snacks.length === this.max) {\r\n      this.remove(this.snacks[0].id);\r\n    }\r\n\r\n    if (snack.timeout || this.timeout) {\r\n      timeout = setTimeout(() => {\r\n        this.remove(id);\r\n      }, snack.timeout || this.timeout)\r\n    }\r\n\r\n    const data = Object.assign({ id: id, timeoutObj: timeout }, snack);\r\n\r\n    if (snack.action) {\r\n      const that = this;\r\n      const fcn = snack.action.onClick || new Function();\r\n      snack.action.onClick = () => {\r\n        fcn(data);\r\n        that.remove(id);\r\n      };\r\n    }\r\n\r\n    if (snack.onAdd) {\r\n      snack.onAdd(data);\r\n    }\r\n\r\n    if (this.onAdd) {\r\n      this.onAdd.emit(data);\r\n    }\r\n\r\n    this.snacks.push(data);\r\n  }\r\n\r\n  remove(id) {\r\n    const snack = this.snacks.find(obj => obj.id === id);\r\n\r\n    if (snack) {\r\n      if (snack.onRemove) {\r\n        snack.onRemove(snack);\r\n      }\r\n\r\n      if (this.onRemove) {\r\n        this.onRemove.emit(snack);\r\n      }\r\n\r\n      if (snack.timeoutObj) {\r\n        clearTimeout(snack.timeoutObj);\r\n      }\r\n    }\r\n\r\n    this.snacks = this.snacks.filter(obj => obj.id !== id);\r\n  }\r\n\r\n  clear() {\r\n    // this.snacks.forEach(snack => {\r\n    //   this.remove(snack.id);\r\n    // });\r\n\r\n    this.snacks = [];\r\n\r\n    if (this.onClear) {\r\n      this.onClear.emit(true);\r\n    }\r\n  }\r\n\r\n  uuid() {\r\n    // tslint:disable:no-bitwise\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n    // tslint:enable:no-bitwise\r\n  }\r\n\r\n  calcTextColor(background) {\r\n    if (!background) {\r\n      return null;\r\n    }\r\n\r\n    function hexToRgb(hex) {\r\n      const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n      hex = hex.replace(shorthandRegex, (m, r, g, b) => {\r\n        return r + r + g + g + b + b;\r\n      });\r\n\r\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n      return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n      } : null;\r\n    }\r\n\r\n    const rgb = hexToRgb(background);\r\n    if (!rgb) {\r\n      return null;\r\n    }\r\n\r\n    const color = [rgb.r / 255, rgb.g / 255, rgb.b / 255];\r\n\r\n    for (let i = 0; i < color.length; ++i) {\r\n      if (color[i] <= 0.03928) {\r\n        color[i] = color[i] / 12.92;\r\n      } else {\r\n        color[i] = Math.pow((color[i] + 0.055) / 1.055, 2.4);\r\n      }\r\n    }\r\n\r\n    const l = 0.2126 * color[0] + 0.7152 * color[1] + 0.0722 * color[2];\r\n\r\n    if (l > 0.179) {\r\n      return '#000';\r\n    } else {\r\n      return '#fff';\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, APP_INITIALIZER } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NAuthGuardService } from './n-authGaurd.service';\r\nimport { NDataModelService } from './n-dataModel.service';\r\nimport { NHttpService } from './n-HTTP.service';\r\nimport { NHTTPLoaderService } from './n-HTTPLoader.service';\r\nimport { NLocalStorageService } from './n-localStorage.service';\r\nimport { NLoginService } from './n-login.service';\r\nimport { NLogoutService } from './n-logout.service';\r\nimport { NNotificationService } from './n-notification.service';\r\nimport { NSnackbarService } from './n-snackbar.service';\r\nimport { NSystemService } from './n-system.service';\r\nimport { NPubSubService } from './n-pubSub.service';\r\nimport { NSessionStorageService } from './n-sessionStorage.service'\r\nimport { NTokenService } from './n-token.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { InstanceFactory, NgForage, NgForageConfig } from 'ngforage';\r\n\r\nimport { SnackComponent } from './snackbar/snack/snack.component';\r\nimport { SnackbarComponent } from './snackbar/snackbar/snackbar.component';\r\n\r\n\r\nexport function startupServiceFactory(startupService: NLocalStorageService) {\r\n  const res = () => {\r\n    // console.log('module before initstorage call');\r\n    return startupService.initStorage();\r\n\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function NgForageFactory(ngForageConfig: NgForageConfig) {\r\n\t// @ts-ignore\r\n\treturn new NgForage({}, new InstanceFactory(ngForageConfig));\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: NHttpService,\r\n      multi: true\r\n    },\r\n    {\r\n      // Provider for APP_INITIALIZER\r\n      provide: APP_INITIALIZER,\r\n      useFactory: startupServiceFactory,\r\n      deps: [NLocalStorageService],\r\n      multi: true\r\n\t},\r\n\t{\r\n\t\tprovide: NgForage,\r\n\t\tuseFactory: NgForageFactory,\r\n\t\tdeps: [\r\n\t\t\tNgForageConfig\r\n\t\t]\r\n\t},\r\n    NAuthGuardService,\r\n    NDataModelService,\r\n    NHttpService,\r\n    NHTTPLoaderService,\r\n    NLocalStorageService,\r\n    NLoginService,\r\n    NLogoutService,\r\n    NNotificationService,\r\n    NSnackbarService,\r\n    NPubSubService,\r\n    NSessionStorageService,\r\n    NTokenService\r\n  ],\r\n  declarations: [\r\n    SnackComponent,\r\n    SnackbarComponent\r\n  ],\r\n  exports: [\r\n    SnackComponent,\r\n    SnackbarComponent\r\n  ]\r\n\r\n})\r\nexport class NeutrinosSeedServicesModule {\r\n\r\n}\r\n"]}